<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>打个广告</title>
      <link href="/2020/09/02/%E6%89%93%E4%B8%AA%E5%B9%BF%E5%91%8A/"/>
      <url>/2020/09/02/%E6%89%93%E4%B8%AA%E5%B9%BF%E5%91%8A/</url>
      
        <content type="html"><![CDATA[<p>有需要Telegram 机器人制作，推特博文抓取推送业务，以及短信推送业务的可以找我。。。<br>价格实惠，开发迅速</p>]]></content>
      
      
      <categories>
          
          <category> 广告 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>H5 多个块元素横向滚动问题</title>
      <link href="/2020/08/05/H5-%E5%A4%9A%E4%B8%AA%E5%9D%97%E5%85%83%E7%B4%A0%E6%A8%AA%E5%90%91%E6%BB%9A%E5%8A%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/05/H5-%E5%A4%9A%E4%B8%AA%E5%9D%97%E5%85%83%E7%B4%A0%E6%A8%AA%E5%90%91%E6%BB%9A%E5%8A%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>工作中遇到的H5 需要4个块级元素在一个窗口内横向滚动 如图<img src="https://i.loli.net/2020/08/05/vytDzeV9nTL1Apx.png" alt="image.png"><br>刚开始直接使用css代码对窗口元素书写<code>width: 690px;overflow-x: scroll;</code>之后对其中的每个块级元素进行书写，因为块级元素内需要使用flex布局所以写了<code>display:flex</code>，写完调试发现并没有与想象中的横向滑动符合几个块级元素纵向的排列没有在一行内，如图<img src="https://i.loli.net/2020/08/05/tG2Hz5LC1TqUAIE.png" alt="image.png">。<a id="more"></a><br>这时想到了使用<code>white-space: nowrap;</code>来使窗口内的元素不换行。但是块级元素内我还想要flex布局，这会导致换行不起作用，这是可以使用<code>display: inline-flex<code>将其变为行内元素进行滚动</code></code></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诡异的滚动样式问题</title>
      <link href="/2020/07/26/%E8%AF%A1%E5%BC%82%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/26/%E8%AF%A1%E5%BC%82%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>起因：同样的css区域滚动代码，js加载数百条数据在一个区块滚动。安卓下没问题，ios下呈现这样的效果<img src="https://i.loli.net/2020/07/26/jgkLNhwH5Z3E7Oa.png" alt="image.png">，也就是数据粘在了一起。</p><p>解决思路: 一开始很懵逼，在mac的Chrome 模拟的iPhone下页面没有任何的问题，但是真机上就是出现了。</p><a id="more"></a><p>刚开始我以为是每条的数据的这个div缺少高度<img src="https://i.loli.net/2020/07/26/GyOMB67IcKQZNT4.png" alt="image.png">接着我就补上了高度和line-height,build后发现没有起作用。<br>测试反馈说挤在一起的数据没法滚动，那就是意味这几百条数据一次行全部渲染在该区块下。难道是<code>overflow:scroll</code> 没有起到作用吗？不应该呀！父级的样式已经添加了高度的，按照常理就应该要可以进行正常的渲染以及滚动，左猜右想，难道是因为我的父级里写了<code>display:flex</code>以及一些flex布局的相关代码吗？<img src="https://i.loli.net/2020/07/26/UStbo4QZIYXlvwz.png" alt="image.png">那我就去了试试吧！<img src="https://i.loli.net/2020/07/26/mSTcPvYQfq2wWBC.png" alt="image.png"> giao！giao！giao！ <img src="https://i.loli.net/2020/07/26/wXYNGZEgj7Tknp4.png" alt="image.png">  就是因为这样</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手写实现Promise.all</title>
      <link href="/2020/07/09/%E6%89%8B%E5%86%99%E5%AE%9E%E7%8E%B0Promise-all/"/>
      <url>/2020/07/09/%E6%89%8B%E5%86%99%E5%AE%9E%E7%8E%B0Promise-all/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PromiseAll = <span class="function">(<span class="params">array</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> tempValue = [];</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">       <span class="keyword">const</span> next = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            array[i].then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">                i++;</span><br><span class="line">                tempValue.push(res)</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">return</span> i === array.length ? resolve(tempValue):next()</span><br><span class="line">            &#125;).catch(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">                reject(<span class="string">`reject <span class="subst">$&#123;res&#125;</span>`</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        next();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p1 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> p2 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> p3 = <span class="built_in">Promise</span>.reject(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">PromiseAll([p1,p2,p3]).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res) <span class="comment">// [1,2,3]</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p4 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> p5 = <span class="built_in">Promise</span>.resolve(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> p6 = <span class="built_in">Promise</span>.reject(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">PromiseAll([p4,p5,p6]).then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(res) <span class="comment">// reject  1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Promise </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintosh-K670-G4E6(神舟战神系列 hasse god of war serials)</title>
      <link href="/2020/04/26/Hackintosh-K670-G4E6-%E7%A5%9E%E8%88%9F%E6%88%98%E7%A5%9E%E7%B3%BB%E5%88%97-hasse-god-of-war-serials/"/>
      <url>/2020/04/26/Hackintosh-K670-G4E6-%E7%A5%9E%E8%88%9F%E6%88%98%E7%A5%9E%E7%B3%BB%E5%88%97-hasse-god-of-war-serials/</url>
      
        <content type="html"><![CDATA[<h1 id="Hackintosh-K670D-G4E6"><a href="#Hackintosh-K670D-G4E6" class="headerlink" title="Hackintosh-K670D-G4E6"></a>Hackintosh-K670D-G4E6</h1><p>Hackintosh for Hasse</p><p>EFI下载地址为  <a href="https://github.com/ShowPenZ/Hackintosh-K670D-G4E6" title="Hackintosh-K670D-G4E6" target="_blank" rel="noopener">Hackintosh-K670D-G4E6</a></p><h3 id="最新提示-wtf-gt-HD-Graphic-610-核显"><a href="#最新提示-wtf-gt-HD-Graphic-610-核显" class="headerlink" title="最新提示 wtf====&gt;HD Graphic 610 核显"></a>最新提示 wtf====&gt;HD Graphic 610 核显</h3><p>Intel Pentium Gold G5420 使用的核显是Intel HD Graphic 610<br>现在基本没有办法驱动这个hd 610 核显，导致电脑特别的卡以及一些观感问题<br>加上这台电脑又是NVIDIA的独显，在macOS 10.13之后的版本已经没有NVIDIA的独显驱动适配了<br>所以我打算将macOS版本降级到10.13.6版本</p><h3 id="我安装的是macOS-版本为10-14-4"><a href="#我安装的是macOS-版本为10-14-4" class="headerlink" title="我安装的是macOS 版本为10.14.4"></a>我安装的是macOS 版本为10.14.4</h3><table><thead><tr><th>配置</th><th></th></tr></thead><tbody><tr><td>CPU</td><td>Intel Pentium Gold G5420  @ 3.80GHz 双核</td></tr><tr><td>GPU</td><td>NVIDIA GeForce GTX 1050 4GB GDDR5</td></tr><tr><td>网卡</td><td>瑞昱RTL8168/8111/8112 Gigabit Ethernet Controller</td></tr><tr><td>硬盘</td><td>镁光256GB/固态硬盘</td></tr><tr><td>内存</td><td>8G DDR4 英睿达 2666MHZ</td></tr></tbody></table><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>将下载好的EFI文件夹替换U盘掉原来的EFI文件夹 </p><p>如果没有制作过u盘可以通过下面提供的工具来制作</p><p>u盘制作工具链接: <a href="https://pan.baidu.com/s/18r3plI7BTnYCG6OTY2S5KQ" target="_blank" rel="noopener">https://pan.baidu.com/s/18r3plI7BTnYCG6OTY2S5KQ</a> 提取码: b9ij </p><a id="more"></a><h3 id="制作u盘启动盘方法"><a href="#制作u盘启动盘方法" class="headerlink" title="制作u盘启动盘方法"></a>制作u盘启动盘方法</h3><ol><li><p>制作启动盘<br>插入一个普通的u盘，打开u盘工具.exe(实际是Ether)，用Ether把镜像写入U盘,镜像可以去<a href="https://blog.daliansky.net/categories/%E4%B8%8B%E8%BD%BD/" title="黑果小兵大佬的blog" target="_blank" rel="noopener">黑果小兵大佬的blog</a>下载想要的macOS版本</p></li><li><p>将efi注入到启动盘<br>打开黑苹果工具.exe 用管理员权限方式打开，看好u盘的盘符在制作u盘盘符那一栏选择好u盘 然后将本次提供的efi文件夹拖进这个软件界面即会自动倒入efi文件等待一段时间会提示制作成功，即可重新拔插下然后打开u盘检阅下文件</p></li></ol><h3 id="启动黑苹果安装"><a href="#启动黑苹果安装" class="headerlink" title="启动黑苹果安装"></a>启动黑苹果安装</h3><p>重启选择有macOS的u盘,然后点击install macOS自动跑代码 然后结束会出现苹果图标和进度条等待一会就会进去macOS实用工具，即完成了初步安装</p>]]></content>
      
      
      <categories>
          
          <category> 玩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果(hackintosh) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuepress 尝鲜以及侧边栏小改动</title>
      <link href="/2020/04/18/Vuepress-%E5%B0%9D%E9%B2%9C%E4%BB%A5%E5%8F%8A%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%B0%8F%E6%94%B9%E5%8A%A8/"/>
      <url>/2020/04/18/Vuepress-%E5%B0%9D%E9%B2%9C%E4%BB%A5%E5%8F%8A%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%B0%8F%E6%94%B9%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>今天试了下 VuePress 这个静态网页生成工具<br>制作了一个面试题集(会陆续增加功能，以及习题的增加)<br><img src="https://i.loli.net/2020/04/18/ZsvwVYWeJXAa8Mk.png" alt="image.png"></p><a id="more"></a><h3 id="package-json-文件"><a href="#package-json-文件" class="headerlink" title="package.json 文件"></a>package.json 文件</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"interviewExercise"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"doc for interviewExercise"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"directories"</span>: &#123;</span><br><span class="line">    <span class="attr">"doc"</span>: <span class="string">"docs"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"vuepress dev docs"</span>,</span><br><span class="line">    <span class="attr">"deploy"</span>: <span class="string">"bash deploy.sh"</span>,</span><br><span class="line">    <span class="attr">"push"</span>: <span class="string">"bash push.sh"</span>,</span><br><span class="line">    <span class="attr">"docs:build"</span>: <span class="string">"vuepress build docs"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"repository"</span>: &#123;</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"git@github.com:ShowPenZ/interviewExercise.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"bugs"</span>: &#123;</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://github.com/ShowPenZ/interviewExercise/issues"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"vuepress"</span>: <span class="string">"^1.0.0-alpha.44"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"gh-pages"</span>: <span class="string">"^2.0.1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>第一步 构造文件目录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在项目根目录创建一个 docs 目录</span></span><br><span class="line">mkdir docs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在项目根目录创建一个 javascript 目录</span></span><br><span class="line"><span class="built_in">cd</span> docs</span><br><span class="line"></span><br><span class="line">mkdir javascript</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 markdown 文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'# Hello VuePress'</span> &gt; docs/README.md</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始编写文档</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>再在 docs 目录下创建一个.vuepress 文件夹<br>以及在.vuepress 文件夹下添加 config.js 配置</p><p>文件目录结构如下<br><img src="https://i.loli.net/2020/04/19/NaFK53mMQjgHqRw.png" alt="image.png"></p><p>config.js 简单配置如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 第一种</span></span><br><span class="line">  <span class="comment">// 因为我是发布到 https://showpenz.github.io/InterviewExercise</span></span><br><span class="line">  <span class="comment">// 所以将 .vuepress/config.js 中的 base 设置为你的仓库名称。</span></span><br><span class="line">  <span class="comment">// 例如，如果你的仓库是 https://github.com/showpenz/InterviewExercise ，</span></span><br><span class="line">  <span class="comment">// 则已部署的页面将在 https://showpenz.github.io/InterviewExercise 上可用。</span></span><br><span class="line">  <span class="comment">// 在这种情况下，你应该将base设置为 "/InterviewExercise/" 。</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 第二种</span></span><br><span class="line">  <span class="comment">// 如果发布到 https://showpenz.github.io</span></span><br><span class="line">  <span class="comment">// 例如，如果你的仓库是 https://github.com/showpenz/ ，</span></span><br><span class="line">  <span class="comment">// 则已部署的页面将在 https://showpenz.github.io/ 上可用。</span></span><br><span class="line">  <span class="comment">// 在这种情况下，你应该将base设置为 "/" 。</span></span><br><span class="line"></span><br><span class="line">  base: <span class="string">"/interviewExercise"</span>,</span><br><span class="line">  dest: <span class="string">"dist"</span>,</span><br><span class="line"></span><br><span class="line">  description: <span class="string">"面试题"</span>,</span><br><span class="line">  locales: &#123;</span><br><span class="line">    <span class="comment">// 键名是该语言所属的子路径</span></span><br><span class="line">    <span class="comment">// 作为特例，默认语言可以使用 '/' 作为其路径。</span></span><br><span class="line">    <span class="string">"/"</span>: &#123;</span><br><span class="line">      lang: <span class="string">"en-US"</span>, <span class="comment">// 将会被设置为 &lt;html&gt; 的 lang 属性</span></span><br><span class="line">      title: <span class="string">"InterviewExercise"</span>,</span><br><span class="line">      description: <span class="string">"Vue-powered Static Site Generator"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"/zh/"</span>: &#123;</span><br><span class="line">      lang: <span class="string">"zh-CN"</span>,</span><br><span class="line">      title: <span class="string">"练习题"</span>,</span><br><span class="line">      description: <span class="string">"Vue 驱动的静态网站生成器"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  themeConfig: &#123;</span><br><span class="line">    editLinks: <span class="literal">false</span>,</span><br><span class="line">    docsDir: <span class="string">"docs"</span>,</span><br><span class="line">    nav: [],</span><br><span class="line">    locales: &#123;</span><br><span class="line">      <span class="string">"/"</span>: &#123;</span><br><span class="line">        selectText: <span class="string">"选择语言"</span>,</span><br><span class="line">        label: <span class="string">"English"</span>,</span><br><span class="line">        ariaLabel: <span class="string">"Languages"</span>,</span><br><span class="line">        editLinkText: <span class="string">"Edit this page on GitHub"</span>,</span><br><span class="line">        <span class="comment">// nav: [&#123; text: "Nested", link: "/nested/", ariaLabel: "Nested" &#125;],</span></span><br><span class="line">        sidebar: &#123;</span><br><span class="line">          <span class="string">"/"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">"Javascript"</span>, <span class="comment">//侧边栏主标题</span></span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  title: <span class="string">"DataStructureTransformation"</span>, <span class="comment">// 侧边栏二级标题</span></span><br><span class="line">                  children: [</span><br><span class="line">                    [<span class="string">"javascript/DataStructureTransformation/1"</span>, <span class="string">"question 1"</span>], <span class="comment">// 数组第0项是需要显示的md文件的文件夹的文件路径  第1项是侧边栏的三级标题</span></span><br><span class="line">                  ],</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"/zh/"</span>: &#123;</span><br><span class="line">        <span class="comment">// 多语言下拉菜单的标题</span></span><br><span class="line">        selectText: <span class="string">"Languages"</span>,</span><br><span class="line">        <span class="comment">// 该语言在下拉菜单中的标签</span></span><br><span class="line">        label: <span class="string">"简体中文"</span>,</span><br><span class="line">        <span class="comment">// 编辑链接文字</span></span><br><span class="line">        editLinkText: <span class="string">"在 GitHub 上编辑此页"</span>,</span><br><span class="line">        <span class="comment">// Service Worker 的配置</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前 locale 的 algolia docsearch 选项</span></span><br><span class="line">        <span class="comment">// nav: [&#123; text: "嵌套", link: "/zh/nested/" &#125;],</span></span><br><span class="line">        sidebar: &#123;</span><br><span class="line">          <span class="string">"/zh/"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              title: <span class="string">"Javascript"</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  title: <span class="string">"数据结构转换"</span>,</span><br><span class="line">                  children: [</span><br><span class="line">                    [<span class="string">"/zh/javascript/DataStructureTransformation/1"</span>, <span class="string">"第1题"</span>],</span><br><span class="line">                  ],</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li>书写完毕配配置部署到 github 的 git-page</li></ol><p><font color="red">默认提前在 github 开好新的项目，打开 gitpage 并与当前项目建立好关系</font></p><p>首先在根目录编写 deploy.bash(windows 系统需进行一些处理)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保脚本抛出遇到的错误</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态文件</span></span><br><span class="line">npm run docs:build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入生成的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> docs/.vuepress/dist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是发布到自定义域名</span></span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">'deploy'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span><br><span class="line"><span class="comment"># git push -f git@github.com:showpenz/showpenz.github.io.git master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span><br><span class="line"><span class="comment"># 把下面的地址换成你的</span></span><br><span class="line"><span class="comment"># git push -f git@github.com:showpenz/interviewExercise.git master:gh-pages</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure><p>然后在根目录执行 npm run deploy.bash 便会自动 build 好并打包在.vuepress 下生成 dist 文件夹，然后自动 push 到 git-pages 分支</p><ol start="3"><li>因为我不是全局安装 vuepress 工具 所以好多文件没有自动配置以及生成这里介绍一个我遇到的问题</li></ol><p>根据上面那种简单配置的 config.js 往下走 会导致你新增一个 md 文件就要手动去 config.js 里面增加 sidebar 因为我做的是三级的侧边栏所以好像自动生成侧边栏的功能没法用，我想以后不论增加文件夹还是文件都能自动关联到侧边栏，所以，没关系咱们手写一个。。。</p><p>首先啥也别说 先建一个工具类的文件夹 utils,新增 fileHelper.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fileHelper = &#123;</span><br><span class="line">  getFileName: <span class="function"><span class="keyword">function</span> (<span class="params">rootPath, filePath</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> fileTypes = <span class="regexp">/\.md$/</span>; <span class="comment">//只匹配以md结尾的文件</span></span><br><span class="line">    <span class="keyword">let</span> fileNames = [];</span><br><span class="line"></span><br><span class="line">    fs.readdirSync(rootPath + filePath).forEach(<span class="function">(<span class="params">file</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> tempFilePath = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">let</span> generateArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line">      fullPath = rootPath + filePath + <span class="string">"/"</span> + file;</span><br><span class="line">      <span class="comment">//异步获取文件状态</span></span><br><span class="line">      <span class="keyword">let</span> fileInfo = fs.statSync(fullPath);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (fileInfo.isFile() &amp;&amp; fileTypes.test(file) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//剔除README.md</span></span><br><span class="line">        <span class="keyword">if</span> (file !== <span class="string">"README.md"</span>) &#123;</span><br><span class="line">          file = file.replace(<span class="string">".md"</span>, <span class="string">""</span>);</span><br><span class="line">          tempFilePath = filePath + <span class="string">"/"</span> + file;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        generateArr.push(tempFilePath, file);</span><br><span class="line">        fileNames.push(generateArr); <span class="comment">// 构造二维数组</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    fileNames.sort(); <span class="comment">// 排序</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fileNames;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = fileHelper;</span><br></pre></td></tr></table></figure><p>再在 utils 下新增一个 help.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fileHelper = <span class="built_in">require</span>(<span class="string">"./fileHelper"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isString = <span class="built_in">Object</span>.prototype.toString;</span><br><span class="line"><span class="keyword">const</span> isArray = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> isString.call(arr) === <span class="string">"[object Array]"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isObject = <span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> isString.call(arr) === <span class="string">"[object Object]"</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> helper = &#123;</span><br><span class="line">  genSidebar: <span class="function"><span class="keyword">function</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    title,</span></span></span><br><span class="line"><span class="function"><span class="params">    children = [],</span></span></span><br><span class="line"><span class="function"><span class="params">    collapsable = true,</span></span></span><br><span class="line"><span class="function"><span class="params">    sidebarDepth = <span class="number">1</span></span></span></span><br><span class="line"><span class="function"><span class="params">  </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">let</span> genData = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (children &amp;&amp; isArray(children[<span class="number">0</span>]) &amp;&amp; isObject(children[<span class="number">0</span>][<span class="number">0</span>])) &#123;</span><br><span class="line">      <span class="keyword">let</span> tempArr = [];</span><br><span class="line"></span><br><span class="line">      children.map(<span class="function">(<span class="params">d</span>) =&gt;</span> &#123;</span><br><span class="line">        tempArr.push(d[<span class="number">0</span>]);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      genData = tempArr;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      genData = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    arr.push(&#123;</span><br><span class="line">      title,</span><br><span class="line">      children: genData,</span><br><span class="line">      collapsable,</span><br><span class="line">      sidebarDepth,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;,</span><br><span class="line">  generateArr: <span class="function"><span class="keyword">function</span> (<span class="params">arr, rootpath</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> tempArr = [];</span><br><span class="line"></span><br><span class="line">    arr.map(<span class="function">(<span class="params">d, i</span>) =&gt;</span> &#123;</span><br><span class="line">      tempArr.push(</span><br><span class="line">        that.genSidebar(</span><br><span class="line">          d.title,</span><br><span class="line">          fileHelper.getFileName(rootpath, d.path),</span><br><span class="line">          d.collapsable,</span><br><span class="line">          d.sidebarDepth || <span class="number">1</span></span><br><span class="line">        )</span><br><span class="line">      );</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tempArr;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = helper;</span><br></pre></td></tr></table></figure><p>再在 docs 文件夹下新增一个 fileData 文件夹以及在 fileData 内创建 sidebarData.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构建这样的数据类型</span></span><br><span class="line"><span class="keyword">const</span> sidebarData = &#123;</span><br><span class="line">  enFileData: [</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"DataStructureTransformation"</span>,</span><br><span class="line">      path: <span class="string">"/en/javascript/DataStructureTransformation"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"eventHandler"</span>,</span><br><span class="line">      path: <span class="string">"/en/javascript/eventHandler"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"basic"</span>,</span><br><span class="line">      path: <span class="string">"/en/javascript/basic"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"dataProcessing"</span>,</span><br><span class="line">      path: <span class="string">"/en/javascript/dataProcessing"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  zhFileData: [</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"数据结构转换"</span>,</span><br><span class="line">      path: <span class="string">"/javascript/DataStructureTransformation"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"事件处理相关"</span>,</span><br><span class="line">      path: <span class="string">"/javascript/eventHandler"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"基础类"</span>,</span><br><span class="line">      path: <span class="string">"/javascript/basic"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: <span class="string">"数据处理"</span>,</span><br><span class="line">      path: <span class="string">"/javascript/dataProcessing"</span>,</span><br><span class="line">      collapsable: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = sidebarData;</span><br></pre></td></tr></table></figure><p>最后修改 config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">const</span> rootpath = path.dirname(__dirname); <span class="comment">//执行一次dirname将目录定位到docs目录</span></span><br><span class="line"><span class="comment">// const util = require("util");</span></span><br><span class="line"><span class="keyword">const</span> sideBarData = <span class="built_in">require</span>(<span class="string">"./fileData/sideBarData"</span>);</span><br><span class="line"><span class="keyword">const</span> helper = <span class="built_in">require</span>(<span class="string">"./utils/helper"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> en = helper.genSidebar(</span><br><span class="line">  <span class="string">"Javascript"</span>,</span><br><span class="line">  helper.generateArr(sideBarData.enFileData, rootpath),</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> zh = helper.genSidebar(</span><br><span class="line">  <span class="string">"Javascript"</span>,</span><br><span class="line">  helper.generateArr(sideBarData.zhFileData, rootpath),</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(util.inspect(en, &#123; showHidden: false, depth: null, colors: true &#125;)); // alternative shortcutconsole.log(util.inspect(myObject, false, null, true /* enable colors */))</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  base: <span class="string">"/interviewExercise/"</span>,</span><br><span class="line">  dest: <span class="string">"docs/.vuepress/dist"</span>,</span><br><span class="line"></span><br><span class="line">  description: <span class="string">"面试题"</span>,</span><br><span class="line">  locales: &#123;</span><br><span class="line">    <span class="comment">// 键名是该语言所属的子路径</span></span><br><span class="line">    <span class="comment">// 作为特例，默认语言可以使用 '/' 作为其路径。</span></span><br><span class="line">    <span class="comment">// "/": &#123;</span></span><br><span class="line">    <span class="comment">//   lang: "en-US", // 将会被设置为 &lt;html&gt; 的 lang 属性</span></span><br><span class="line">    <span class="comment">//   title: "InterviewExercise",</span></span><br><span class="line">    <span class="comment">//   description: "Vue-powered Static Site Generator",</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"/en/"</span>: &#123;</span><br><span class="line">      lang: <span class="string">"en-US"</span>, <span class="comment">// 将会被设置为 &lt;html&gt; 的 lang 属性</span></span><br><span class="line">      title: <span class="string">"InterviewExercise"</span>,</span><br><span class="line">      description: <span class="string">"Vue-powered Static Site Generator"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"/"</span>: &#123;</span><br><span class="line">      lang: <span class="string">"zh-CN"</span>,</span><br><span class="line">      title: <span class="string">"练习题"</span>,</span><br><span class="line">      description: <span class="string">"Vue 驱动的静态网站生成器"</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  themeConfig: &#123;</span><br><span class="line">    editLinks: <span class="literal">false</span>,</span><br><span class="line">    docsDir: <span class="string">"docs"</span>,</span><br><span class="line">    nav: [],</span><br><span class="line">    locales: &#123;</span><br><span class="line">      <span class="string">"/en/"</span>: &#123;</span><br><span class="line">        selectText: <span class="string">"选择语言"</span>,</span><br><span class="line">        label: <span class="string">"English"</span>,</span><br><span class="line">        ariaLabel: <span class="string">"Languages"</span>,</span><br><span class="line">        editLinkText: <span class="string">"Edit this page on GitHub"</span>,</span><br><span class="line">        <span class="comment">// nav: [&#123; text: "Nested", link: "/nested/", ariaLabel: "Nested" &#125;],</span></span><br><span class="line">        sidebar: &#123;</span><br><span class="line">          <span class="string">"/en/"</span>: en,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"/"</span>: &#123;</span><br><span class="line">        <span class="comment">// 多语言下拉菜单的标题</span></span><br><span class="line">        selectText: <span class="string">"Languages"</span>,</span><br><span class="line">        <span class="comment">// 该语言在下拉菜单中的标签</span></span><br><span class="line">        label: <span class="string">"简体中文"</span>,</span><br><span class="line">        <span class="comment">// 编辑链接文字</span></span><br><span class="line">        editLinkText: <span class="string">"在 GitHub 上编辑此页"</span>,</span><br><span class="line">        <span class="comment">// Service Worker 的配置</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当前 locale 的 algolia docsearch 选项</span></span><br><span class="line">        <span class="comment">// nav: [&#123; text: "嵌套", link: "/zh/nested/" &#125;],</span></span><br><span class="line">        sidebar: &#123;</span><br><span class="line">          <span class="string">"/"</span>: zh,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样通过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> en = helper.genSidebar(</span><br><span class="line">  <span class="string">"Javascript"</span>,</span><br><span class="line">  helper.generateArr(sideBarData.enFileData, rootpath),</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> zh = helper.genSidebar(</span><br><span class="line">  <span class="string">"Javascript"</span>,</span><br><span class="line">  helper.generateArr(sideBarData.zhFileData, rootpath),</span><br><span class="line">  <span class="literal">true</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>就能不用再手动目录了，新增一个文件夹就可以去 sidebarData.js 内新增侧边栏标题和文件路径就行了</p><p>以上就是暂时对 vuepress 的浅浅尝试</p>]]></content>
      
      
      <categories>
          
          <category> 静态博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Vuepress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端代理解决跨越问题</title>
      <link href="/2020/03/26/%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E8%B7%A8%E8%B6%8A%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/26/%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E8%B7%A8%E8%B6%8A%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在我的许多实际工程中，我并没有使用什么所谓前端代理去解决跨域问题，都是让运维大佬给我在配置里增加一下我的本机 ip。</p><p>今天乘着结束一个小项目的时候把玩下前端代理</p><ol><li><p>首先我是用的技术栈是 react+antd+dva+umi,其中 umi 已经使用了 webpack-dev-server 插件 所以可以直接进行配置。<br>如果你用的也是 umijs 这个 react 应用框架 可以直接使用如下配置</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">proxy: &#123;</span><br><span class="line">    <span class="string">'/u/v1/'</span>: &#123;</span><br><span class="line">      target: <span class="string">'https://demo.xxx.com/'</span>,</span><br><span class="line">      changeOrigin: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// pathRewrite: &#123; '^/u/v1/': '' &#125;,</span></span><br><span class="line">      secure: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'/f/v1/'</span>: &#123;</span><br><span class="line">      target: <span class="string">'https://demo.xxx.com/'</span>,</span><br><span class="line">      changeOrigin: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// pathRewrite: &#123; '^/u/v1/': '' &#125;,</span></span><br><span class="line">      secure: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// /u/v1/ 用作匹配API地址 例如你要请求的API地址 是https://demo.xxx.com/u/v1/getUserInfo 含有/u/v1/这个字符串</span></span><br><span class="line">  <span class="comment">// 就会在发起请求时,将请求代理到本机地址====&gt;https://localHost:8080/u/v1/getUserInfo</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// target 代理的API地址，就是需要跨域的API地址。</span></span><br><span class="line"> <span class="comment">// 地址可以是域名,如：https://demo.xxx.com/</span></span><br><span class="line"> <span class="comment">// 也可以是IP地址：http://127.0.0.1:3000</span></span><br><span class="line"> <span class="comment">// 如果是域名需要额外添加一个参数changeOrigin: true，否则会代理失败。</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//changeOrigin: true, 这个参数可以让target参数是域名。</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// secure: false,不检查安全问题。</span></span><br><span class="line"> <span class="comment">// 设置后，可以接受运行在 HTTPS 上，可以使用无效证书的后端服务器</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// API地址 为https://demo.xxx.com/u/v1/getUserInfo</span></span><br><span class="line"> <span class="comment">// 设置pathRewrite: &#123;'^/u/v1/' : ''&#125;,后，</span></span><br><span class="line"> <span class="comment">// 最终本地代理访问的路径：https://localHost:8080/getUserInfo，</span></span><br><span class="line"> <span class="comment">// 这个参数的目的是给代理命名后，在访问时把命名删除掉。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 这个在config.js或者umirc.js 中配置好后即可快速检验下</span><br><span class="line"></span><br><span class="line"> 之后将api地址例如 BASE_HOST:http:<span class="comment">//192.168.2.240 改为 BASE_HOST:''</span></span><br><span class="line"></span><br><span class="line"> 默认你引入了各种请求工具 如axios fetch之类的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设 我的想跨域的地址为 https://demo.xxx.com/u/v1/getUserInfo</span></span><br><span class="line"><span class="comment">// 只需填入/u/v1/getUserInfo</span></span><br><span class="line"></span><br><span class="line"> axios(&#123;</span><br><span class="line">  method: <span class="string">'get'</span>,</span><br><span class="line">  url: <span class="string">'/u/v1/getUserInfo'</span>, <span class="comment">//填入你想跨域的api地址</span></span><br><span class="line"> &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res)</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></li><li><p>没有使用 umi 也是一样的<br>首先确保<br>(1)、需要使用插件：webpack-dev-server。<br>(2)、webpack-dev-server 使用的是 http-proxy-middleware 来实现跨域代理的。<br>(3). webpack 版本 &gt;= 3.0</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">"/u/v1/"</span>: &#123;</span><br><span class="line">        target: <span class="string">"https://demo.xxx.com/"</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// pathRewrite: &#123; '^/u/v1/': '' &#125;,</span></span><br><span class="line">        secure: <span class="literal">false</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"/f/v1/"</span>: &#123;</span><br><span class="line">        target: <span class="string">"https://demo.xxx.com/"</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        <span class="comment">// pathRewrite: &#123; '^/u/v1/': '' &#125;,</span></span><br><span class="line">        secure: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 还有需要匹配的就继续写...</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> umi </tag>
            
            <tag> proxy </tag>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react componentDidMount 使用的一些想法</title>
      <link href="/2020/03/25/react-componentDidMount-%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/"/>
      <url>/2020/03/25/react-componentDidMount-%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>React componentDidMount 中尽量别使用 setState 方法</p><p>在 componentDidMount()中，你可以立即调用 setState()。它将会触发一次额外的渲染，但是它将在浏览器刷新屏幕之前发生。这保证了在此情况下即使 render()将会调用两次，用户也不会看到中间状态。谨慎使用这一模式，因为它常导致性能问题。在大多数情况下，你可以 在 constructor()中使用赋值初始状态来代替。然而，有些情况下必须这样，比如像模态框和工具提示框。这时，你需要先测量这些 DOM 节点，才能渲染依赖尺寸或者位置的某些东西。</p><p>componentDidMount 本身处于一次更新中，我们又调用了一次 setState，就会在未来再进行一次 render，造成不必要的性能浪费，大多数情况可以设置初始值来搞定。当然在componentDidMount我们可以调用接口，再回调中去修改state。</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 代码优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 浮点数运算--使用decimal.js</title>
      <link href="/2020/03/24/js-%E6%B5%AE%E7%82%B9%E6%95%B0%E8%BF%90%E7%AE%97-%E4%BD%BF%E7%94%A8decimal-js/"/>
      <url>/2020/03/24/js-%E6%B5%AE%E7%82%B9%E6%95%B0%E8%BF%90%E7%AE%97-%E4%BD%BF%E7%94%A8decimal-js/</url>
      
        <content type="html"><![CDATA[<p>为了避免 js 运算出现如<img src="https://i.loli.net/2020/04/26/lRPemr91E6FIvqW.png" alt="image.png"> 这种情况<br>推荐使用 decimal.js 这个库来帮助我们处理精度问题</p><p>1.首先引入<br>(1). 标签引入方式 <code>&lt;script src="<a href="https://cdn.bootcss.com/decimal.js/10.2.0/decimal.js&quot;&gt;" target="_blank" rel="noopener">https://cdn.bootcss.com/decimal.js/10.2.0/decimal.js&quot;&gt;</a></code><br>(2). <code>npm intall decimal.js or yarn add decimal.js</code></p><p>2.使用方式</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例如 加法</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">0.1</span>,</span><br><span class="line">  b = <span class="number">0.2</span>;</span><br><span class="line"><span class="keyword">let</span> c;</span><br><span class="line"></span><br><span class="line">c = <span class="keyword">new</span> Decimal(a).add(<span class="keyword">new</span> Decimal(b)).toNumber(); <span class="comment">// 0.3</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/03/24/7nASorUbHaiI1NO.png" alt="image.png"></p><p>3.简易封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">"lodash"</span>; <span class="comment">// const _ = require("lodash");</span></span><br><span class="line"><span class="keyword">import</span> Decimal <span class="keyword">from</span> <span class="string">"decimal.js"</span>; <span class="comment">// const _ = require("lodash");</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BLANK_CHAR = <span class="string">"-"</span>;</span><br><span class="line"><span class="keyword">const</span> isBlankChar = <span class="function"><span class="params">value</span> =&gt;</span> value === BLANK_CHAR;</span><br><span class="line"><span class="keyword">const</span> isNumericString = <span class="function"><span class="params">value</span> =&gt;</span></span><br><span class="line">  /^[-+]?([<span class="number">0</span><span class="number">-9</span>]+(\.[<span class="number">0</span><span class="number">-9</span>]*)?|\.[<span class="number">0</span><span class="number">-9</span>]+)([eE][-+]?[<span class="number">0</span><span class="number">-9</span>]+)?$/.test(value);</span><br><span class="line"><span class="keyword">const</span> isNumericValue = <span class="function"><span class="params">value</span> =&gt;</span></span><br><span class="line">  (hasString(value) &amp;&amp; isNumericString(value)) || hasNumber(value);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串判断</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasString</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> _.isString(value) &amp;&amp; !_.isEmpty(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数字判断</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasNumber</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> _.isNumber(value) &amp;&amp; _.isFinite(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNumberValue</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (isBlankChar(value)) &#123;</span><br><span class="line">    <span class="keyword">return</span> BLANK_CHAR;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> isNumericValue(value) ? value : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 科里化处理参数传递</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generateOperationFnUseDecimalJs</span>(<span class="params">op</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">x, y</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isBlankChar(x) || isBlankChar(y)) &#123;</span><br><span class="line">      <span class="keyword">return</span> BLANK_CHAR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (op === <span class="string">"div"</span> &amp;&amp; getNumberValue(y) === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isNumericValue(x) &amp;&amp; isNumericValue(y)</span><br><span class="line">      ? <span class="keyword">new</span> Decimal(x)[op](<span class="keyword">new</span> Decimal(y)).toFixed()</span><br><span class="line">      : <span class="number">0</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DecimalPlus = generateOperationFnUseDecimalJs(<span class="string">"plus"</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DecimalMinus = generateOperationFnUseDecimalJs(<span class="string">"minus"</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DecimalMultiply = generateOperationFnUseDecimalJs(<span class="string">"times"</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> DecimalDivide = generateOperationFnUseDecimalJs(<span class="string">"div"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用方法</span></span><br><span class="line">DecimalPlus(<span class="number">0.1</span>, <span class="number">0.2</span>); <span class="comment">//加法 0.3</span></span><br><span class="line">DecimalMinus(<span class="number">0.2</span>, <span class="number">0.1</span>); <span class="comment">//减法 0.1</span></span><br><span class="line">DecimalMultiply(<span class="number">0.1</span>, <span class="number">0.3</span>); <span class="comment">//乘法 0.03</span></span><br><span class="line">DecimalDivide(<span class="number">0.3</span>, <span class="number">0.1</span>); <span class="comment">//除法 3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js精度处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链价值</title>
      <link href="/2020/01/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%BB%B7%E5%80%BC/"/>
      <url>/2020/01/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%BB%B7%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<ol><li><p><font color="red">区块链是信任的机器，也是一个价值互联网</font></p><br><p>区块链用一套数学算法确保了两个陌生人不借助于第三方的情况下，把一笔交易，不管是金融的交易或者是商品的交易完成。这就是区块链最核心，最本质的东西。</p><br></li><li><p><font color="red">从三个层次了解区块链</font></p><br><ol><li><p>第一个层次，区块链最底层的一个层次，实际上是分布式网络，区块链是架构在分布式网络技术之上的一个应用。</p><br></li><li><p>第二个层次，在分布式网络基础上，如果我们给它加上一层东西，加一层密码学的账本体系，这个分布式网络就变成了分布式账本</p><br></li><li><p>第三个层次，公有区块链或者叫比特币区块链</p><a id="more"></a><br></li></ol></li><li><p><font color="red">从技术发展来看区块链</font></p><br><ol><li>区块链 1.0 即 2009 年一月份上线的比特币区块链。它最主要的，最核心的贡献就是建立了一套密码学的账本，提供了一套新的记账方法，但它有个欠缺，没有人可以在比特币区块链上修改任何规则，你只能用它</li><li>区块链 2.0 即 2015 年有一个新的公有区块链，叫以太坊，与区块链 1.0 最大的不同就是别人可以在以太坊区块链的基础上做其他的应用开发，也就是你可以用它作为底层做你的事情</li><li>区块链 3.0 2018 年开始进入区块链 3.0 但没有其他技术上大的突破。3.0 要解决的就是在性能上能支持大规模的商业应用<br></li></ol></li><li><p><font color="red">从商业角度看待区块链</font></p><br><p>有人说区块链是真正的共享经济，因为它没有股东和你分利润，任何一个人加入这个网络，就可以得到相应的那份价值，均分给所有的使用者，这才是真正的共享经济。</p><br><p>比特币区块链是一个分布式商业的最伟大的实验，所有的产权是开源的，所有的组织机构都是非盈利的，没有股东，没有董事会，没有管理层，什么都没有但它运行了十年时间，每秒都在发生着交易，汇兑，支付，没有出现过坏账，系统没有出现过宕机，任何中心化的系统，即使是金融系统，每年一定会出现系统宕机</p><br></li><li><p><font color="red">迄今为止，我们所建立的合作原则，大致来讲，逃不出过去轴心文明的思想范畴。</font></p><br><p>区块链的伟大意义就在这里，在没有区块链之前，不管我们用互联网做多少创新，我们发现它的思想底座并没有超越。所以我们今天的行业规则，社会伦理，以及政治法则，并没有超越 2500 年前的先哲。</p><br><p>区块链要在这个意义上，让世界重新启动。要重新理解合作，重新把合作建立在一个坚实的技术驱动之上，这是一个非常伟大的创新，需要非常伟大的勇气。</p><br></li><li><p><font color="red">区块链就是真正改变信任的机制，区块链打的就是这样一个巨大无比的赌：陌生人在互联网上能不能一次就达成信任？</font></p><br><p>在火车站模式下如何保证陌生人一次就建立信任？这不是要通过道德说教，而是通过漫长的塑造才有可能达成。今天区块链让我们已经及其接近这个社会底层的构造，陌生人的一次信任，就如同乌托邦。</p><br><p>在这种情形下，区块链正在让这个乌托邦建立在非常坚实的基础上。更重要的一点是：区块链把财富生产和财富分配平衡地放在了一个巨大账本之中。这个巨大的账本对所有参与区块链的人，是公开透明的，同时又是加密保护隐私的。所以财富的生产和分配，同时进行，这是它的伟大意义。</p><br></li><li><p><font color="red">互联网的长项恰恰也是它的弱项，因为信息的传播不需要代价，篡改数据非常容易</font></p><br><p>当进入价值互联网时，区块链可能会形成这样一个底层的技术：一方面它保证了想互联网一样在全球范围内高速度的传播，另一方面又杜绝了拷贝，粘贴问题，所以区块链会成为价值互联网的基础。</p><br></li><li><p><font color="red">区块链三问难题</font></p><br><p>第一，去中心化。区块链系统本省是一个去中心化的，去中心化就是希望参与到网络空间的参与者或者系统构建者，不光是用户，而是构建这个系统的人，节点尽可能的分散，这是去中心化特征。</p><br><p>第二，它的性能，性能通常的衡量标准是每秒完成的交易数；</p><br><p>第三，安全，区块链是一种相对安全的系统，这个安全怎么定义？就是以节点为单位，抵御更多攻击者。</p><br><p>去中心化，性能和安全构成一个三角形，这个三角形是相互制约的</p><br></li><li><p><font color="red">区块链作用案例说明</font></p><br><p>区块链到底有什么作用?区块链到底是什么东西?或者说它有什么用?</p><br><p>我们讲两个真实的应用场景。区块这个东西实际上是个记录,你可以理解成你在笔记本上账本上写下一个记录。当任何一个东西产生的时候,实体也好、虚拟的也好,它就同时产生一个记录,你要把它理解成你自己就好了。</p><br><p>你生下来的时候身上就有一个特定的 DNA,这个是不能改的,哪怕你兄弟的 DNA 跟你都不一样,你这一辈子带着。这就是你唯一一个标识,这就是区块,你将来比如做这么一瓶水,做出来以后它就对应着这么一个区块,有一个自己的 DNA。</p><br><p>什么是链呢?就是说它将来所有的行踪、所有中间的交易、整个在生命周期各个过程的一个描述。比如我们说比特币从张三给李四,这个交易过程就要写上一笔,某年月日这个比特币是什么,对应一个随机的号码,从张三到李四手里,还要交到所有的矿机那,通知全世界它的所有权发生转换了。</p><br><p>说到这里,你就想到它有一个很好的用处,就是能够跟踪。比如说这瓶水将来从什么地方来,最后卖到我手里。这件事很重要,现在我们讲食品安全、药品安全,中间流通渠道要把住,中间谁要把箱子拿开,换两瓶假的进去,你是没法检测的,因为流程没法跟踪。以现有的技术跟踪它,实在是太困难了。</p><br><p>区块链将来有这么一个好处,这个药品安全还是很重要的,阿里巴巴的高管们说,中国路边小药房里头没用的药、过期的药,根本就是安慰剂淀粉的药非常非常多,这个比例说出来吓死你。这不是哪家房能解决的间题,因为现在的技术根本解决不了,区块链是一个可能的解决方案。</p><br><p>一个简单的方法,这瓶药生产出来的时候,既然有一个区块,我就产生一个对应的区块链给它。它有一个对应的随机码,这个事一旦产生了,在全世界就不能更改了。</p><br><p>它下了生产线,比如说要装箱,先装瓶,这一瓶药就有一个区块链。装箱,区块链还有一个好处,几个区块链可以合并成一个新的,这个箱子本身有一个。我装一个 RFID 码,走出车间,进入仓库的时候,它就过一道门,又有一个记录。</p><br><p>这个门到仓库以后,谁如果把它打开了,换了一瓶药,这个区块就不对了,因为每瓶药上自己有一个区块。然后进入到货车,小货车送到大货车,然后到顺丰快递,通过飞机运到一个新的城市,放到一个集装箱里,最后形成一个大的商品往下传。</p><br><p>甚至他可以验证这瓶药不仅是哪个厂生产的,用了哪种原材料,这个源头是可以溯的。有了这个方法就可以从根本上解决问题。</p><br><p>你就会问,你描述的这个场景是否能成功? 检测一瓶药或者一瓶水由于成本问题,可能做起来有待一些时日。</p><br><p>大个头的比较贵的商品有可能能成,所以说现在因为只是一个成本问题,贵的商品已经做到了,以后你买的一瓶药,这个都可以完全跟踪得很清楚。</p><br><p>所以这是区块链真正有用的用处,所以很多公司在开发区块链一些底层技术,也是看到了这些商业前景。</p><br><p>再有一个,区块链本身是一个智能的合约。</p><br></li><li><p><font color="red">区块链在时空中处于什么位置？</font></p><br><p>第一代互联网的时候,最牛的公司是谁?是微软和英特尔,剩下的公司基本上都是打酱油的。用什么?你用英特尔的芯片, Windows 的操作系统。</p><br><p>第二代就是手机互联网,只要手机放在身边,你就随时被挂在网上了。现在你自己的习惯已经改了,两三分钟就要看一下微信。大家说加下微信号吧,不是说把这两个手机连起来,而是把这两个人连起来。</p><br><p>第三代大的玩家也变了,最收益的是谁呢?一个是谷歌、安卓,再个就是像高通、三星这些公司,或者说它背后实际上生产处理器的公司就是一家,英国的 ARM。</p><br><p>第四代出现了,前三代都有一个间题,巨头控制着,你越来越不自由了。第四代能不能换一个玩法?你有传感器也好,你有操作系统也好,最好数据这件事我能不能掌握,传输的时候也不要都是通过你一家网络、一家服务器来做,我能不能分散一下?</p><br><p>所以你要把区块链在时间的节点上来看,它处在这样一个位置,就是说从第三代以后可能进入到第四代,所以这是它的重要性所在。</p><br></li><li><p><font color="red">区块链=生产关系？</font></p><br><p>区块链是生产关系,怎么理解这件事?我们说生产关系主要有三个要素,第一,生产的钱和材料,生产的工具这些原材料,这些生产要素从哪来?归谁?</p><br><p>第一代的生产关系,我们先抛开马克思这一套不说,实际上归地主也好、资本家也好、企业主也好,随你怎么叫。</p><br><p>他们提供生产资料以后,你就替他干活。互联网过去是什么呢?过去大公司,为什么你要把数据存在 Facebook 上,你为什么存在百度?</p><br><p>因为你没有生产资料,它不归你。你不存在他们那你存在哪?对于这些公司来讲也一样,你为什么要去那上班?</p><br><p>你不到那上班没人给你工资,生产资料在人家那。既然在人家那,人家说了就算数,这是第一个阶段</p><br><p>第二代是以硅谷为代表的科技公司的新玩法,现在中国的创业公司都在学。就是说我给你一些股权,每个人都谁小老板了,虽然你才万分之一的股票，你老板 80%的股票，没关系，反正你有股权。</p><br><p>滴滴怎么起来的?你说风险投资给它投的,没有司机愿意接单,没有人去打车,起不来的。</p><br><p>其实前一千个愿意接单的司机和前一万个愿意打车的人,其实对滴滴的起步贡献很大。当时,这种公司多了去了,凭什么它起来了?就是因为有前面这些人在支持它</p><br><p>但是滴滴起来以后,它的员工可能也分到期权,也挣到钱了,你要是前一千个人,不管是出租车司机也好,还是乘客也好,你是一分钱分不着的。</p><br><p>当然你说我白打了几次车,这点小头跟近一千亿的市值是比不了的你是半分钱没有的,虽然你是前面的贡献者。因为什么呢?没法记录你的贡献,你凭什么一千个一定比一万个多,这贡献没法算,而且你打了多少次车，改给你多少奖励，也没法算，因为没发跟踪你的表现。</p><br><p>区块链出来以后，这个问题就解决了。就是或每一个人的贡献，每个人的行为，你打一次车就是一个智能合约，这个事情是可以跟踪的。</p><br><p>区块链是一个生产关系，重新定义了人和人之间的关系，相比来说，它未必是把效率提搞多少。</p><br></li></ol>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>比特币痛点</title>
      <link href="/2020/01/17/%E6%AF%94%E7%89%B9%E5%B8%81%E7%97%9B%E7%82%B9/"/>
      <url>/2020/01/17/%E6%AF%94%E7%89%B9%E5%B8%81%E7%97%9B%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<ol><li><p><font color="red">比特币区块链难以建设一个去中心，民主平等的社会。</font><br>底层代码的核心团队与参与挖矿和运行的主要力量能够发挥更大的影响力。<br>受计算机运算能力的影响，比特币的挖矿和获得，并不是想宣传额那样人人都有平等的机会，竞争的结果，使得挖矿获得比特币的机会越来越集中到少数算力强大的矿池或者节点上。</p><br></li><li><p><font color="red">比特币区块链’去信任’，’去中介’的点对点交易是有严格条件的。</font><br>即所有的人都参与到同一个比特币区块链网络平台，平台上运行的只能是比特币，而不能是比特币以外的其他资产或价值，比特币从其生产的源头就得到网络系统严密的验证和记录，难以造假或者篡改。因此，比特币需要在一个’干净’，基于比特币区块链网络平台的环境</p><br><a id="more"></a></li><li><p><font color="red">比特币区块链只是比特币产生和汇划的的封闭系统，实际功能有限，现实世界的资产或者价值很难推送到这一体系上运行。</font><br>要发挥比特币体系的功能，就必须将比特币兑换成法币，并将比特币体系作为现实世界资金汇划的一个过度环节或者新的中介环节。而这就需要比特币体系与现实世界实现连接，从现实世界的大环境来看，其结果不是去中介，而是增加了中介。</p><br></li><li><p><font color="red">比特币网络交易平台并不是比特币体系内在组成部分，不是去中心的。</font><br>比特币区块链体系和比特币交易体系是两个不同的概念，而现在很多人总弄混着两个概念，给了投资这收个韭菜的机会。</p><br></li><li><p><font color="red">比特币区块链体系过于强调’去中心化’，反而影响其效率，成本与监管。</font><br>比特币区块链体系要实现’去中心化’，就需要大量的外部计算机接入并共同运行。这样，加入的计算机节点越多，在比特币的挖矿与转让需要全网广播，验证，分布式处理等的难度就越大，其挖矿过程需要消耗越来越大量的能源，甚至会造成环境污染。法币外挂交易平台的处理程序复杂，效率很慢，成本很高。更重要的是，如果加入比特币体系这样一个完全抵制或规避国家监管的中间环节，法定货币的流通就可能完全失控，被恐怖分子，毒品贩子，网络黑客，金融骗子等利用。</p><br></li><li><p><font color="red">过于追求去中心化，充分的民主自由，实际上就会脱离现实。</font><br>在人类社会中必然存在个别利益与公共利益的矛盾和统一，只有在公共利益最大化的情况下才能使个别利益最大化得到根本保障。在当今世界仍然是以各个国家主权独立和自治为基础架构，国家之间相差悬殊的情况下，设想建立一个’去中心化’，无政府的网络世界和超主权的世界货币，完全摆脱现实世界国家法律的约束，去建立一个去中心化，独立于国家概念的网络平台同样是不现实的</p><br></li><li><p><font color="red">比特币难以成为真正的货币。</font><br>比特币在设计上就是模仿黄金，总量限定，而且挖矿越来越难，产量分阶段逐步减少，以消除认为过多投放的可能性，并为比特币升值创造巨大的想象空间。但高度模仿黄金设计货币体系的思路，本身就是货币设计理念上的一种倒退，是不能成立的。黄金等贵金属曾经长时间作为货币，但正因为其强烈的自然属性，使其供应量难以与经济社会发展的实际水平，特别是可交换社会财富的规模适应，容易造成日益严重的通货膨胀，或者是通货紧缩，币值剧烈波动使货币难以有效发挥价值尺度的功能，最终必然被可以进行数量调控，能够保持货币总量与可交换社会财富规模基本吻合(社会物价综合指数相对稳定)的主权货币或法币锁取代。黄金退出货币舞台是必然选择，不可能在退回去，重新成为货币</p><br></li><li><p><font color="red">网络数字币 ICO 存在更多问题</font><br>ICO 的出现影响极大，看似为区块链创业提供了新的融资方式和渠道，实际上重点是用于炒作数字货币，面向公众募集资金(而非私募)，但严重缺乏必要的规则和监管，很容易产生非常严重的金融和社会问题，甚至将区块链的发展引入歧途。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链是什么</title>
      <link href="/2020/01/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%98%AF%E4%BB%80%E4%B9%88/"/>
      <url>/2020/01/17/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%98%AF%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<ol><li><p>区块链是分布式数据储存，点对点传输，共识机制，加密算法等计算机的新型应用模式。所谓共识机制是指区块链系统中实现不同节点之间建立信任，获取权益的数学算法。<br>区块链是比特币的一个重要概念，本质上是一个去中心化的数据库。它是一串使用密码学方法相关联产生的数据块，每一个数据块中包含了一次比特币网络交易信息，用于验证其信息的有效性(防伪)和生成下一个区块，数据存储的每一个节点都会同步复制整个账本，信息透明难以篡改。</p><br></li><li><p><font color="red">凡事需要更加公平，公正，公开的企业行业，都可以用到区块链技术，都可以用使用区块链技术来改造和实现；凡事需要数据存储，保护，授权，交易的企业，都可以用到区块链技术；凡事需要社会化协作，尤其是跨境，基于计算机网络可以完成的社会化分工和协作，都可以用到区块链技术</font></p><br><a id="more"></a></li><li><p>从互联网思维到区块链思维</p><br></li><li><p>关于区块链思维三个关键点：</p><p>1.技术架构的可靠性。</p><p>2.分配过程的公平性。</p><p>3.成员行为的规范性。</p><br></li><li><p>区块链技术目前最大的意义是它的运行机制：通过技术精巧的组合，完成资源的公平分配，从而保证社区的目标一致，成员的行为规范</p><br></li><li><p>要用科学的眼光看待区块链，以’去中心化’为例，从哲学上讲，矛盾总有主次，从现实来看，大到宇宙星系，小到一个原子都有中心。区块链经典的技术虽然去掉数据结构的中心，但其运行仍受中心化节点的约束。事实上，曾经有’去中心化’的互联网，结果只是颠覆了旧的中心，形成了新的寡头。</p><br></li><li><p>任何产业能够得到长久的发展，都是需要推动社会进步，满足人们生产生活的需求无论区块链在当下是否真正为实体经济发展和改善人民生活提供了支持，但从长远来看，以人为本，从大众的根本需求出发，为社会进步和经济发展提供高效率，低成本的解决方案才是区块链行业发展壮大，迈向成熟的持久动力。</p><br></li><li><p>历史证明，商机并非都是先到先得，先到多得的游戏。新的技术发展的不同阶段都会有不同的商机，创造新的商业机会，不同阶段的商机适合不同类型的人和机构去把握。与其躁动焦虑，盲目跟风，不如静心分析社会需求，研究行业痛点，找准自己最能创造价值的领域和阶段</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npmpkg starter</title>
      <link href="/2020/01/14/react-npmpkg-starter/"/>
      <url>/2020/01/14/react-npmpkg-starter/</url>
      
        <content type="html"><![CDATA[<h1 id="npmpkg-starter-vue"><a href="#npmpkg-starter-vue" class="headerlink" title="npmpkg-starter-vue"></a>npmpkg-starter-vue</h1><p>A Vue NPM package starter</p><p><a href="https://github.com/ShowPenZ/npmpkg-starter-vue" target="_blank" rel="noopener">项目代码地址</a></p><p>为了简化老哥们的生产 npm 包的复杂程度<br>提供了一个小框架(Vue 版) 打包工具使用<a href="https://github.com/egoist/bili" target="_blank" rel="noopener">bili</a><br>还有相应的代码规范规则以及代码提交规范</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i</span><br><span class="line">$ yarn</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ol><li><p>修改<code>package.json</code><br><img src="https://i.loli.net/2020/01/14/9vf1JxTrGCZmtcW.png" alt="image.png"><br>name，author，main，description，keywords 改为你需要写入的信息<br>main 为打包出来的文件路口</p><br><a id="more"></a></li><li><p>修改<code>bill.config.js</code><br><img src="https://i.loli.net/2020/01/14/VuPOGQBKrTYiphe.png" alt="image.png"><br>修改 input 打包入口文件路径 <code>src/xxxx.vue</code> 为你的文件名字，假如你的组件叫 Websocket 则改为<code>src/Websocket.vue</code><br><br>修改 moduleName 模块名字 xxxx 为你的文件模块名字 例如：<code>moduleName: 'Websocket'</code><br><br><code>extractCSS</code> 为打包出来的 js 文件是否要包含 css 也就是不单独派生出 css 文件<br><br><code>babel</code> 这边<font color="red">默认已经给 vue 配置了 jsx 语法</font> 已打开了<code>babelrc: true</code>, <code>.babelrc</code>文件可编写自己的所需</p><br></li><li><p>README.md 文件写入自己的组件介绍以及 LICENSE 文件替换</p><br></li><li><p>书写规范的<code>.editorconfig</code> 代码规范的<code>.prettierrc</code>以及<code>.eslintrc</code>文件可以根据自己的项目需要自己修改 这些都需要 vs code 或者你使用的编辑器下载相关的插件才会生效</p><br></li><li><p><code>yarn build</code> 执行代码编译打包生成 dist 文件夹以及代码源文件</p><br></li><li><p>代码编写完 git 上传时 commit 填写规则<code>type(path): xxxx</code><br>type 必须为其中之一<code>[build, chore, ci, docs, feat, fix, improvement, perf, refactor, revert, style, test]</code><br><code>path</code>为修改文件的路径例如 src，package 之类<br><code>xxxx 为本次修改提交</code></p><br></li><li><p>默认你已经注册过 npm 账号 在发布前最好去 npm 里输入自己要发布的包名检查下是否已有相同的包 npm 的包名都是唯一的 在终端执行<code>npm publish</code>命令即可推送 npm 包(注意 package.json 的 version 版本号)<br><br>大部分的 publish 失败都是包名重复<br><br>小修改小补丁已经 bugfix 可以使用<code>npm version patch && npm publish</code>或相应脚本的代码<code>npm run release:patch</code><br><br>小升级使用<code>npm version minor && npm publish</code>或<code>npm run release:minor</code><br><br>大升级使用<code>npm version major && npm publish</code>或<code>npm run release:major</code></p></li></ol><h1 id="npmpkg-start-react"><a href="#npmpkg-start-react" class="headerlink" title="npmpkg-start-react"></a>npmpkg-start-react</h1><p>a React NPM package starter</p><p><a href="https://github.com/ShowPenZ/npmpkg-start-react" target="_blank" rel="noopener">项目代码地址</a></p><p>为了简化老哥们的生产 npm 包的复杂程度<br>提供了一个小框架(React 版本) 打包工具使用<a href="https://github.com/egoist/bili" target="_blank" rel="noopener">bili</a><br>还有相应的代码规范规则以及代码提交规范</p><h2 id="Installation-1"><a href="#Installation-1" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i</span><br><span class="line">$ yarn</span><br></pre></td></tr></table></figure><h2 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h2><ol><li><p>修改<code>package.json</code><br><img src="https://i.loli.net/2020/01/14/x8qdDzh6C1HfME4.png" alt="image.png"><br>name，author，main，description，keywords 改为你需要写入的信息<br>main 为打包出来的文件路口</p><br></li><li><p>修改<code>bill.config.js</code><br><img src="https://i.loli.net/2020/01/14/dUuiNszJeOf4PZr.png" alt="image.png"><br>修改 input 打包入口文件路径 <code>src/xxxx.jsx</code> 为你的文件名字，假如你的组件叫 Websocket 则改为<code>src/Websocket.jsx</code><br><br>修改 moduleName 模块名字 xxxx 为你的文件模块名字 例如：<code>moduleName: 'Websocket'</code><br><br><code>extractCSS</code> 为打包出来的 js 文件是否要包含 css 也就是不单独派生出 css 文件<br><br><code>babel</code> 这边默认已经配置了 jsx 语法 如果有自己的需求可以打开 <code>babelrc: true</code>, 自己添加<code>.babelrc</code>文件编写自己的所需</p><br></li></ol><h4 id="其他同-vue-版一样"><a href="#其他同-vue-版一样" class="headerlink" title="其他同 vue 版一样"></a>其他同 vue 版一样</h4>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> vue </tag>
            
            <tag> npm </tag>
            
            <tag> starter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react组件转换成vue组件(2)</title>
      <link href="/2020/01/09/react%E7%BB%84%E4%BB%B6%E8%BD%AC%E6%8D%A2%E6%88%90vue%E7%BB%84%E4%BB%B6-2/"/>
      <url>/2020/01/09/react%E7%BB%84%E4%BB%B6%E8%BD%AC%E6%8D%A2%E6%88%90vue%E7%BB%84%E4%BB%B6-2/</url>
      
        <content type="html"><![CDATA[<p>承接上文这次使用我的另一个组件<a href="https://github.com/ShowPenZ/vue-simpleWS" target="_blank" rel="noopener">vue-simpleWS</a>来对比下两个框架的使用上的不同</p><p>上源码 Vue</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Vue-simple-Ws&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    url: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      required: true</span><br><span class="line">    &#125;,</span><br><span class="line">    debug: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">    reconnect: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    return &#123;</span><br><span class="line">      instance: null,</span><br><span class="line">      reconnectFailureTimes: 0,</span><br><span class="line">      reconnectTimer: null,</span><br><span class="line">      needReconnet: true,</span><br><span class="line">      WS: window.WebSocket</span><br><span class="line">        ? new window.WebSocket(that.url)</span><br><span class="line">        : new window.MozWebSocket(that.url)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    that.structureWebSocket();</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    that.destroy();</span><br><span class="line">  &#125;,</span><br><span class="line">  destroy() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    that.needReconnet = false;</span><br><span class="line">    clearTimeout(that.reconnectTimer);</span><br><span class="line">    that.printLog(`WS is close`);</span><br><span class="line">    that.WS.close();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    structureWebSocket() &#123;</span><br><span class="line">      const that = this;</span><br><span class="line">      that.WS.onopen = () =&gt; &#123;</span><br><span class="line">        that.printLog(&quot;ws is connected&quot;);</span><br><span class="line">        that.$emit(&quot;onOpen&quot;, that.sendData);</span><br><span class="line">      &#125;;</span><br><span class="line">      that.WS.onmessage = data =&gt; &#123;</span><br><span class="line">        that.printLog(`wsData:$&#123;data.data&#125;`);</span><br><span class="line">        that.$emit(&quot;onMessage&quot;, data.data);</span><br><span class="line">      &#125;;</span><br><span class="line">      that.WS.onclose = e =&gt; &#123;</span><br><span class="line">        const &#123; code, reason, wasClean &#125; = e;</span><br><span class="line">        that.printLog(`WS is disconneted,reason:$&#123;reason&#125;`);</span><br><span class="line">        that.$emit(&quot;onClose&quot;, code, reason, wasClean);</span><br><span class="line">        if (that.reconnect &amp;&amp; that.needReconnet) &#123;</span><br><span class="line">          that.reconnectFailureTimes++;</span><br><span class="line">          if (that.reconnectFailureTimes &lt; 3) &#123;</span><br><span class="line">            that.reconnectTimer = window.setTimeout(() =&gt; &#123;</span><br><span class="line">              that.setState(&#123;</span><br><span class="line">                WS: window.WebSocket</span><br><span class="line">                  ? new window.WebSocket(that.url)</span><br><span class="line">                  : new window.MozWebSocket(that.url)</span><br><span class="line">              &#125;);</span><br><span class="line">              that.structureWebSocket();</span><br><span class="line">            &#125;, 15 * 1000);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      that.WS.onerror = e =&gt; &#123;</span><br><span class="line">        that.$emit(&quot;onError&quot;, e);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    sender(msg) &#123;</span><br><span class="line">      const that = this;</span><br><span class="line">      if (that.WS &amp;&amp; that.WS.readyState === 1) &#123;</span><br><span class="line">        that.WS.send(msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    sendData(msg) &#123;</span><br><span class="line">      const that = this;</span><br><span class="line">      return that.sender(msg);</span><br><span class="line">    &#125;,</span><br><span class="line">    printLog(val) &#123;</span><br><span class="line">      const that = this;</span><br><span class="line">      if (that.debug) &#123;</span><br><span class="line">        console.log(val);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>react</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;;</span><br><span class="line">import PropTypes from &apos;prop-types&apos;;</span><br><span class="line"></span><br><span class="line">function isFunction(arg) &#123;</span><br><span class="line">  if (typeof arg === &apos;function&apos;) &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Websocket extends React.Component &#123;</span><br><span class="line">  static propTypes = &#123;</span><br><span class="line">    url: PropTypes.string.isRequired,</span><br><span class="line">    onOpen: PropTypes.func,</span><br><span class="line">    onMessage: PropTypes.func.isRequired,</span><br><span class="line">    onError: PropTypes.func,</span><br><span class="line">    onClose: PropTypes.func,</span><br><span class="line">    debug: PropTypes.bool,</span><br><span class="line">    reconnect: PropTypes.bool,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  static defaultProps = &#123;</span><br><span class="line">    debug: false,</span><br><span class="line">    reconnect: true,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; url &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    that.state = &#123;</span><br><span class="line">      WS: window.WebSocket ? new window.WebSocket(url) : new window.MozWebSocket(url),</span><br><span class="line">      reconnectTime: 0,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    that.reconnectFailureTimes = 0;</span><br><span class="line">    that.reconnectTimer = null;</span><br><span class="line">    that.needReconnet = true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line"></span><br><span class="line">    that.structureWebSocket();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillUnmount() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; WS &#125; = that.state;</span><br><span class="line"></span><br><span class="line">    that.needReconnet = false;</span><br><span class="line"></span><br><span class="line">    clearTimeout(that.reconnectTimer);</span><br><span class="line"></span><br><span class="line">    that.printLog(`WS is close`);</span><br><span class="line"></span><br><span class="line">    WS.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  structureWebSocket = () =&gt; &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; WS &#125; = that.state;</span><br><span class="line">    const &#123; onOpen, onMessage, onError, onClose, reconnect, url &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    WS.onopen = () =&gt; &#123;</span><br><span class="line">      that.printLog(&apos;ws is connected&apos;);</span><br><span class="line"></span><br><span class="line">      if (isFunction(onOpen)) &#123;</span><br><span class="line">        onOpen(that.sendData);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    WS.onmessage = data =&gt; &#123;</span><br><span class="line">      that.printLog(`wsData:$&#123;data.data&#125;`);</span><br><span class="line"></span><br><span class="line">      if (isFunction(onMessage)) &#123;</span><br><span class="line">        onMessage(data.data);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    WS.onclose = e =&gt; &#123;</span><br><span class="line">      const &#123; code, reason, wasClean &#125; = e;</span><br><span class="line"></span><br><span class="line">      that.printLog(`WS is disconneted,reason:$&#123;reason&#125;`);</span><br><span class="line"></span><br><span class="line">      if (isFunction(onClose)) &#123;</span><br><span class="line">        onClose(code, reason, wasClean);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      if (reconnect &amp;&amp; that.needReconnet) &#123;</span><br><span class="line">        that.reconnectFailureTimes++;</span><br><span class="line"></span><br><span class="line">        if (that.reconnectFailureTimes &lt; 3) &#123;</span><br><span class="line">          that.reconnectTimer = window.setTimeout(() =&gt; &#123;</span><br><span class="line">            that.setState(&#123;</span><br><span class="line">              WS: window.WebSocket ? new window.WebSocket(url) : new window.MozWebSocket(url),</span><br><span class="line">            &#125;);</span><br><span class="line">            that.structureWebSocket();</span><br><span class="line">          &#125;, 15 * 1000);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    WS.onerror = e =&gt; &#123;</span><br><span class="line">      if (isFunction(onError)) &#123;</span><br><span class="line">        onError();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  sender = msg =&gt; &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; WS &#125; = that.state;</span><br><span class="line"></span><br><span class="line">    if (WS &amp;&amp; WS.readyState === 1) &#123;</span><br><span class="line">      WS.send(msg);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  sendData = msg =&gt; &#123;</span><br><span class="line">    const that = this;</span><br><span class="line"></span><br><span class="line">    return that.sender(msg);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  printLog = val =&gt; &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; debug &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    if (debug) &#123;</span><br><span class="line">      console.log(val);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; children &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    return &lt;div&gt;&#123;children&#125;&lt;/div&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Websocket;</span><br></pre></td></tr></table></figure><p>代码比较</p><ol><li>生命周期<br>react <img src="https://i.loli.net/2020/01/09/ZoYxEcAzmGSVe5q.png" alt="image.png"><br>vue <img src="https://i.loli.net/2020/01/09/BTyPGesz9VYQCwr.png" alt="image.png"></li><li>变量声明<br>react <img src="https://i.loli.net/2020/01/09/iHFvJaZrA3XyzET.png" alt="image.png"><br>vue <img src="https://i.loli.net/2020/01/09/gh9wtCkJuGRyxm1.png" alt="image.png"></li><li>函数<br>react 组件内的函数直接放在 class 类内部走箭头函数即可<br>vue   组件的内定义的函数要放在 methods 对象内</li></ol><p>个人还是喜欢react api较少 比较天马行空 vue支持jsx之后无需使用模版语法也挺不错的<br>反正react 真香 一giao我里giao</p><p>源代码以及项目地址<br>react  <a href="https://github.com/ShowPenZ/react-websocket" target="_blank" rel="noopener">react-websocket</a><br>vue  <a href="https://github.com/ShowPenZ/vue-simpleWS" target="_blank" rel="noopener">vue-simpleWS</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react组件转换成vue组件(1)</title>
      <link href="/2020/01/09/react%E7%BB%84%E4%BB%B6%E8%BD%AC%E6%8D%A2%E6%88%90vue%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/01/09/react%E7%BB%84%E4%BB%B6%E8%BD%AC%E6%8D%A2%E6%88%90vue%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>今天完成了一个 react 组件的 vue 化–<a href="https://github.com/ShowPenZ/vue-lazyload-pic" target="_blank" rel="noopener">vue-lazyload-pic</a></p><p>顺手重新撸了一把 vue</p><p>vue 的模版语法写的我实在蛋疼所以直接上了 jsx 语法，也方便双向绑定<br>   方法:<br>   (1): 增加两个插件<br>    <code>yarn add @vue/babel-helper-vue-jsx-merge-props<br>    yarn add @vue/babel-preset-jsx</code></p><p>   (2): 在<code>.babelrc</code>文件内做如下修改:</p>   <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [<span class="string">"@vue/babel-preset-jsx"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   就可以快乐的使用 jsx 语法了<br></p><p>   例子: <a href="https://github.com/ShowPenZ/vue-lazyload-pic" target="_blank" rel="noopener">vue-lazyload-pic</a></p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">render() &#123;</span><br><span class="line">    const that = this;</span><br><span class="line">    const &#123; imgLoaded, imgClassName, img, alt, skeleton &#125; = that;</span><br><span class="line">    const onLoad = () =&gt; &#123;</span><br><span class="line">        that.$emit(&apos;onloads&apos;, true);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">        &lt;div class=&quot;P-container&quot;&gt;</span><br><span class="line">            &#123;imgLoaded ? (</span><br><span class="line">            &lt;img class=&#123;ClassNames(&apos;defaultImg&apos;, imgClassName)&#125; src=&#123;img&#125; alt=&#123;alt&#125; /&gt;</span><br><span class="line">            ) : (</span><br><span class="line">            &lt;div class=&#123;ClassNames(&apos;skeleton1&apos;, skeleton)&#125;&gt;&lt;/div&gt;</span><br><span class="line">            )&#125;</span><br><span class="line">            &lt;img class=&quot;noShow&quot; src=&#123;img&#125; alt=&#123;alt&#125; onLoad=&#123;onLoad&#125; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>   上面代码 有个注意点就是<br>   <a id="more"></a><br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;noShow&quot; src=&#123;img&#125; alt=&#123;alt&#125; onLoad=&#123;onLoad&#125; /&gt;</span><br></pre></td></tr></table></figure></p><p>   jsx 内的 img 标签有 onLoad 属性方法 意思就是当图片资源加载完成后会有回调通知所以在这个方法内我们可以使用 Vue 的 this.$emit 来派发一个 onloads 事件通知,在父组件内进行监听</p><p>   代码例子为如下</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;LazyLoad.PicLazyLoad </span><br><span class="line">     img=&#123;Sevn&#125; // 图片 </span><br><span class="line">     skeleton=&quot;newSkeleton&quot;//占位图css样式(className) </span><br><span class="line">     imgClassName=&quot;sevn&quot; // 图片的样式(className)</span><br><span class="line">     alt=&quot;sevn&quot; </span><br><span class="line">     imgLoaded=&#123;imgLoaded&#125; </span><br><span class="line">     &#123;...&#123; on: &#123; onloads: onLoads &#125;&#125;&#125; //监听图片加载 </span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>   使用<code>{...{ on: { onloads: onLoads }}}</code>来监听$emit派发的onload事件<br>   详细代码以及使用方式请参阅<a href="https://github.com/ShowPenZ/vue-lazyload-pic/blob/master/README.md" target="_blank" rel="noopener">这里</a></p><p>   接下来是两个框架对于相同代码逻辑的不同实现对比<br>   react版本的<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">class PicLazyLoad extends React.Component &#123;</span><br><span class="line">    static propTypes = &#123;</span><br><span class="line">        onLoaded: PropTypes.func.isRequired,</span><br><span class="line">        loaded: PropTypes.bool.isRequired,</span><br><span class="line">        img: PropTypes.string.isRequired,</span><br><span class="line">        alt: PropTypes.string.isRequired,</span><br><span class="line">        imgClassName: PropTypes.string,</span><br><span class="line">        skeleton: PropTypes.string</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    static defaultProps = &#123;</span><br><span class="line">        alt: &quot;&quot;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    state = &#123;</span><br><span class="line">        loaded: false</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        const that = this;</span><br><span class="line">        const &#123; loaded &#125; = that.state;</span><br><span class="line">        const &#123; img, alt, imgClassName, skeleton &#125; = that.props;</span><br><span class="line"></span><br><span class="line">        const onLoad = () =&gt; &#123;</span><br><span class="line">            that.setState(&#123;</span><br><span class="line">                loaded: true</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        return (</span><br><span class="line">            &lt;div className=&quot;container&quot;&gt;</span><br><span class="line">                &#123;loaded ? (</span><br><span class="line">                &lt;img</span><br><span class="line">                    className=&#123;ClassNames(&quot;defaultImg&quot;, imgClassName)&#125;</span><br><span class="line">                    src=&#123;img&#125;</span><br><span class="line">                    alt=&#123;alt&#125;</span><br><span class="line">                /&gt;</span><br><span class="line">                ) : (</span><br><span class="line">                &lt;div className=&#123;ClassNames(&quot;skeleton1&quot;, skeleton)&#125;&gt;&lt;/div&gt;</span><br><span class="line">                )&#125;</span><br><span class="line">                &lt;img className=&quot;noShow&quot; src=&#123;img&#125; alt=&#123;alt&#125; onLoad=&#123;onLoad&#125; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>   Vue版本的<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">const PicLazyLoad = &#123;</span><br><span class="line">     name: &apos;PicLazyLoad&apos;,</span><br><span class="line">     props: &#123;</span><br><span class="line">         imgLoaded: &#123;</span><br><span class="line">             type: Boolean,</span><br><span class="line">             required: true,</span><br><span class="line">         &#125;,</span><br><span class="line">         img: &#123;</span><br><span class="line">             type: String,</span><br><span class="line">             required: true,</span><br><span class="line">         &#125;,</span><br><span class="line">         alt: &#123;</span><br><span class="line">             type: String,</span><br><span class="line">             required: true,</span><br><span class="line">         &#125;,</span><br><span class="line">         imgClassName: &#123;</span><br><span class="line">             type: String,</span><br><span class="line">             required: false,</span><br><span class="line">         &#125;,</span><br><span class="line">         skeleton: &#123;</span><br><span class="line">             type: String,</span><br><span class="line">             required: false,</span><br><span class="line">         &#125;,</span><br><span class="line">     &#125;,</span><br><span class="line">     data() &#123;</span><br><span class="line">         return &#123;&#125;;</span><br><span class="line">     &#125;,</span><br><span class="line">     render() &#123;</span><br><span class="line">         const that = this;</span><br><span class="line">         const &#123; imgLoaded, imgClassName, img, alt, skeleton &#125; = that;</span><br><span class="line">         const onLoad = () =&gt; &#123;</span><br><span class="line">             that.$emit(&apos;onloads&apos;, true);</span><br><span class="line">         &#125;;</span><br><span class="line"></span><br><span class="line">         return (</span><br><span class="line">             &lt;div class=&quot;P-container&quot;&gt;</span><br><span class="line">                 &#123;imgLoaded ? (</span><br><span class="line">                 &lt;img class=&#123;ClassNames(&apos;defaultImg&apos;, imgClassName)&#125; src=&#123;img&#125; alt=&#123;alt&#125; /&gt;</span><br><span class="line">                 ) : (</span><br><span class="line">                 &lt;div class=&#123;ClassNames(&apos;skeleton1&apos;, skeleton)&#125;&gt;&lt;/div&gt;</span><br><span class="line">                 )&#125;</span><br><span class="line">                 &lt;img class=&quot;noShow&quot; src=&#123;img&#125; alt=&#123;alt&#125; onLoad=&#123;onLoad&#125; /&gt;</span><br><span class="line">             &lt;/div&gt;</span><br><span class="line">         );</span><br><span class="line">     &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>   当然简单的组件Vue有了jsx的加持后基本和react没什么太大的差别下一篇带来稍微复杂一点点的另一个组件再次一起感受下两个框架的一些使用上的差别</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>telegram 机器人</title>
      <link href="/2019/12/28/telegram-%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2019/12/28/telegram-%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="关于如何创建机器人以及机器人部署至线上服务器请看这篇博文"><a href="#关于如何创建机器人以及机器人部署至线上服务器请看这篇博文" class="headerlink" title="关于如何创建机器人以及机器人部署至线上服务器请看这篇博文"></a>关于如何创建机器人以及机器人部署至线上服务器请看这篇博文</h3><p><a href="http://anata.me/2019/03/30/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E5%86%99%E4%B8%80%E4%B8%AATelegram-Bot/" target="_blank" rel="noopener">从零开始写一个 Telegram Bot</a></p><h3 id="以下的是我根据博文部署以及写机器人产生的一些问题"><a href="#以下的是我根据博文部署以及写机器人产生的一些问题" class="headerlink" title="以下的是我根据博文部署以及写机器人产生的一些问题"></a>以下的是我根据博文部署以及写机器人产生的一些问题</h3><ol><li>线上部署时，用的是 <font color="red">centos 6.8</font> 的系统所以安装 nginx 时产生了一些和教程博客不一样的地方<br>如图: 这是教程截图 <img src="https://i.loli.net/2019/12/28/z7ogQahDpLJ3BK2.png" alt="image.png"></li></ol><p>因为 centos 系统版本不一样 所以 yum 源设置也不一样 我的解决办法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure><p>写入：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><p>保存退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><ol start="2"><li>网站支持 https<br>教程中 centos 7 可以直接这样 如图：<br><img src="https://i.loli.net/2019/12/28/fkw2rzUNmaTV5Ao.png" alt="image.png"><br>但由于我的系统为 centos 6 所以无法直接使用命令<br>解决办法： 打开<a href="https://certbot.eff.org/lets-encrypt/centos6-nginx.html" target="_blank" rel="noopener">certbot</a> 根据教程一步步即可完成 https 加持，教程的第三步会有两种可选方式我为了省事少折腾直接选择了第一种 auto 模式，都完成了之后，第五步去验证网站是否已支持 https。</li></ol><h3 id="github-已开源我的机器人"><a href="#github-已开源我的机器人" class="headerlink" title="github 已开源我的机器人"></a>github 已开源我的机器人</h3><p><a href="https://github.com/ShowPenZ/telegram-bot" target="_blank" rel="noopener">telegram-bot</a><br>欢迎根据教程制作一个 telegram bot 进行娱乐消遣(x 图爬取)顺便告诫下宅男程序猿<font color="red">少打点手冲</font></p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
          <category> node </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> telegram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js Generator函数小记</title>
      <link href="/2019/12/24/js-Generator%E5%87%BD%E6%95%B0%E5%B0%8F%E8%AE%B0/"/>
      <url>/2019/12/24/js-Generator%E5%87%BD%E6%95%B0%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>generator 函数运行结果释义</p><p>遇到<font color="red">yield 表达式，就暂停执行后面的操作</font>，<br>并将紧跟在<font color="red">yield 后面的那个表达式的值，作为返回的对象的 value 属性值</font>。<br>下一次调用 next 方法时，再继续往下执行，直到遇到下一个 yield 表达式。<br><font color="red">next 方法可以带一个参数，该参数就会被当作上一个 yield 表达式的返回值</font>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">generator</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> y = <span class="number">1</span> * (<span class="keyword">yield</span> x + <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">let</span> z = <span class="keyword">yield</span> y / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> x + y + z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fun1 = generator(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun1.next();</span><br></pre></td></tr></table></figure><p>{value:4, done:false}<br>第一步 第一次使用 next 方法时，运行 fun1.next()走到第一个 yield 里所以 value 为 4</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun1.next();</span><br></pre></td></tr></table></figure><p>{value:NaN, done:false}<br>第二步 运行 fun1.next() 没传参数 导致 yield (x + 2) 返回 undefined<br>则 y = 1 * undefined 即 yield(y/2)为 NaN</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun1.next();</span><br></pre></td></tr></table></figure><p>{value:NaN, done:true}<br>第三步 运行 fun1.next() 没传参数 导致 yield (y / 2) 返回 undefined<br>则 z = undefined 即 4 + NaN + undefinde 为 NaN</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fun2 = generator(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">fun2.next();</span><br></pre></td></tr></table></figure><p>{ value:4, done:false }<br>第一步 第一次使用 next 方法时，运行 fun1.next()走到第一个 yield 里所以 value 为 4</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun2.next(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><p>{ value:2.5, done:false }<br>第二步 运行 fun1.next() 传递参数 5 并将上一次 yield 表达式的值设为传递的参数 5 则 yield (x + 2) 返回 5<br>则 y=1 * 5 为 5 即 yiled(5 / 2) 为 2.5</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun2.next(<span class="number">6</span>);</span><br></pre></td></tr></table></figure><p>{ value:13, done:true }<br>第三步 运行 fun1.next() 传递参数 6 并将上一次 yield 表达式的值设为传递的参数 6 则 yield (y / 2) 返回 6<br>则 z = 6 往下走再无 yiled，直接执行 return = x + y + z = 2 + 5 + 6 = 13</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Generator </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-lazyload-pic</title>
      <link href="/2019/12/09/react-lazyload-pic/"/>
      <url>/2019/12/09/react-lazyload-pic/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ShowPenZ/react-lazyload-pic/blob/master/README_en-US.md" target="_blank" rel="noopener">English</a> | 中文</p><h1 id="react-lazyload-pic"><a href="#react-lazyload-pic" class="headerlink" title="react-lazyload-pic"></a>react-lazyload-pic</h1><blockquote><p>图片以及图片列表懒加载的react组件</p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-lazyload-pic --save</span><br><span class="line">or</span><br><span class="line">$ yarn add react-lazyload-pic</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>方法1 仅针对当前所要展示的大图做完全加载后展示，未完全加载时图片用占位图替代</p><p><img src="https://i.loli.net/2019/12/09/1SF9QoBCuiMOW63.gif" alt="lazyloadlist.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; LazyLoadPic &#125; <span class="keyword">from</span> <span class="string">"react-lazyload-pic"</span>;</span><br><span class="line"><span class="keyword">import</span> Sevn <span class="keyword">from</span> <span class="string">'@/assets/sevn.jpg'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    loaded : <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; loaded &#125; = that.state;</span><br><span class="line">    <span class="keyword">const</span> onLoad = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      that.setState(&#123;</span><br><span class="line">        loaded:<span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"container"</span>&gt;</span> </span></span><br><span class="line">              &lt;PicLazyLoad</span><br><span class="line">                img=&#123;Sevn&#125;             // 图片</span><br><span class="line">                skeleton="newSkeleton" // 占位图css样式(className)</span><br><span class="line">                imgClassName="sevn"    // 图片的样式(className)</span><br><span class="line">                alt="sevn"</span><br><span class="line">                loaded=&#123;loaded&#125;</span><br><span class="line">                onLoad=&#123;onLoad&#125;</span><br><span class="line"><span class="xml">              /&gt; </span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//css </span></span><br><span class="line">&#123;</span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height: <span class="number">100</span>vh;</span><br><span class="line">    font-size: <span class="number">30</span>px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .newSkeleton,</span><br><span class="line">  .sevn &#123;</span><br><span class="line">    width: <span class="number">200</span>px;</span><br><span class="line">    height: <span class="number">100</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>方法2 懒加载图片列表，当图片加载才会被显示在列表内<br><img src="https://i.loli.net/2019/12/09/4dNFHoXhxE3jmcy.gif" alt="lazyloadlist.gif"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; LazyLoadPic &#125; <span class="keyword">from</span> <span class="string">"react-lazyload-pic"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      imgArr: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">17</span>; i++) &#123;</span><br><span class="line">      arr.push(&#123; <span class="attr">url</span>: <span class="built_in">require</span>(<span class="string">`./images/<span class="subst">$&#123;i&#125;</span>.png`</span>) &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    that.setState(&#123;</span><br><span class="line">      imgArr: _.concat(arr)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; imgArr &#125; = that.state;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;LazyLoadPic</span><br><span class="line">          boxClassName=<span class="string">"boxContainer"</span></span><br><span class="line">          imgBoxClassName=<span class="string">"imgBoxContainer"</span></span><br><span class="line">          imgClassName=<span class="string">"imgContainer"</span></span><br><span class="line">          imgArr=&#123;imgArr&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  onLoaded: PropTypes.func.isRequired,</span><br><span class="line">  loaded: PropTypes.bool.isRequired,</span><br><span class="line">  img: PropTypes.string.isRequired,</span><br><span class="line">  alt: PropTypes.string.isRequired,</span><br><span class="line">  imgClassName: PropTypes.string,</span><br><span class="line">  skeleton: PropTypes.string</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  alt: <span class="string">""</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"> <span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  imgClassName: PropTypes.string,</span><br><span class="line">  imgBoxClassName: PropTypes.string,</span><br><span class="line">  alt: PropTypes.string</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  alt: <span class="string">""</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> lazyload-pic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-slot-machines</title>
      <link href="/2019/10/26/react-slot-machines/"/>
      <url>/2019/10/26/react-slot-machines/</url>
      
        <content type="html"><![CDATA[<p>这是一个简单的老虎机组件<br>效果截图<br><img src="https://i.loli.net/2019/10/28/hbVvUewMcDTXStk.gif" alt="slotMachines.gif"></p><h1 id="react-slot-machines"><a href="#react-slot-machines" class="headerlink" title="react-slot-machines"></a>react-slot-machines</h1><blockquote><p>A slot machine component for React</p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-slot-machines --save</span><br><span class="line">$ yarn add react-slot-machines</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    startEngine: <span class="literal">false</span>,</span><br><span class="line">    giftAmount: <span class="number">16</span>,  <span class="comment">//礼物种类</span></span><br><span class="line">    giftPos1: <span class="number">0</span>,     <span class="comment">//老虎机第1槽位停下的礼物索引</span></span><br><span class="line">    giftPos2: <span class="number">1</span>,     <span class="comment">//老虎机第2槽位停下的礼物索引</span></span><br><span class="line">    giftPos3: <span class="number">3</span>,     <span class="comment">//老虎机第3槽位停下的礼物索引 </span></span><br><span class="line">    hasStart: <span class="literal">false</span>,</span><br><span class="line">    giftImgUrlArr: []</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; giftAmount &#125; = that.state;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> array = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= giftAmount; i++) &#123;</span><br><span class="line">      array.push(&#123; <span class="attr">url</span>: <span class="built_in">require</span>(<span class="string">`../src/images/<span class="subst">$&#123;i&#125;</span>.png`</span>) &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    that.setState(&#123;</span><br><span class="line">      <span class="comment">//重复添加奖品数组以拓宽奖池数组长度</span></span><br><span class="line">      <span class="comment">//自定义n圈就得添加n+1个礼物数组</span></span><br><span class="line">      <span class="comment">//多出来得一个是用于真实旋转后落位的</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// giftImgUrlArr: _.concat(array, array, array, array)</span></span><br><span class="line">      giftImgUrlArr: _.concat(array)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">      startEngine,</span><br><span class="line">      hasStart,</span><br><span class="line">      giftPos1,</span><br><span class="line">      giftPos2,</span><br><span class="line">      giftPos3,</span><br><span class="line">      giftImgUrlArr,</span><br><span class="line">      giftAmount</span><br><span class="line">    &#125; = that.state;</span><br><span class="line">    <span class="keyword">const</span> onClickEngineStart = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (startEngine) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      that.setState(&#123;</span><br><span class="line">        startEngine: <span class="literal">true</span>,</span><br><span class="line">        hasStart: <span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> onEngineCompelet = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (giftPos1 === giftPos2 &amp;&amp; giftPos1 !== giftPos3) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"实在太可惜，再来一次"</span>);</span><br><span class="line">        that.setState(&#123;</span><br><span class="line">          startEngine: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (giftPos2 === giftPos3 &amp;&amp; giftPos2 !== giftPos1) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"实在太可惜，再来一次"</span>);</span><br><span class="line">        that.setState(&#123;</span><br><span class="line">          startEngine: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        giftPos1 !== giftPos2 &amp;&amp;</span><br><span class="line">        giftPos1 !== giftPos3 &amp;&amp;</span><br><span class="line">        giftPos2 !== giftPos3</span><br><span class="line">      ) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"哇！ 感谢参与"</span>);</span><br><span class="line">        that.setState(&#123;</span><br><span class="line">          startEngine: <span class="literal">false</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;Slot</span><br><span class="line">          giftAmount=&#123;giftAmount&#125;</span><br><span class="line">          giftPos1=&#123;giftPos1&#125;</span><br><span class="line">          giftPos2=&#123;giftPos2&#125;</span><br><span class="line">          giftPos3=&#123;giftPos3&#125;</span><br><span class="line">          hasStart=&#123;hasStart&#125;</span><br><span class="line">          startEngine=&#123;startEngine&#125;</span><br><span class="line">          onClickEngineStart=&#123;onClickEngineStart&#125;</span><br><span class="line">          onEngineCompelet=&#123;onEngineCompelet&#125;</span><br><span class="line">          <span class="comment">// backgroundImg=&#123;require("../src/images/sven.jpg")&#125;</span></span><br><span class="line">          giftImgUrlArr=&#123;giftImgUrlArr&#125;</span><br><span class="line">          <span class="comment">// customTurns=&#123;3&#125;</span></span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  giftPos1: PropTypes.number.isRequired,            <span class="comment">//老虎机第1槽位停下的礼物索引</span></span><br><span class="line">  giftPos2: PropTypes.number.isRequired,            <span class="comment">//老虎机第2槽位停下的礼物索引</span></span><br><span class="line">  giftPos3: PropTypes.number.isRequired,            <span class="comment">//老虎机第3槽位停下的礼物索引</span></span><br><span class="line">  giftType: PropTypes.number.isRequired,            <span class="comment">//礼物种类</span></span><br><span class="line">  startEngine: PropTypes.bool.isRequired,           <span class="comment">//老虎机是否启动</span></span><br><span class="line">  hasStart: PropTypes.bool.isRequired,              <span class="comment">//老虎机是否启动过</span></span><br><span class="line">  onClickEngineStart: PropTypes.func.isRequired,    <span class="comment">//点击启动老虎机</span></span><br><span class="line">  onEngineCompelet: PropTypes.func.isRequired,      <span class="comment">//老虎机完全停下的回掉</span></span><br><span class="line">  giftImgUrlArr: PropTypes.array.isRequired,        <span class="comment">//传入的奖品url地址(数组)</span></span><br><span class="line">  slotDelay2: PropTypes.number,                     <span class="comment">//第2槽位的启动延迟(相对于第一槽位)</span></span><br><span class="line">  slotDelay3: PropTypes.number,                     <span class="comment">//第3槽位的启动延迟(相对于第一槽位)</span></span><br><span class="line">  backgroundImg: PropTypes.string,                  <span class="comment">//老虎机的图片(如果没传会有一张默认的圣诞老虎机图片)</span></span><br><span class="line">  engineDuration: PropTypes.number,                 <span class="comment">//老虎机的转动完成时间</span></span><br><span class="line">  reWindowsContainer: PropTypes.string,             <span class="comment">//老虎机的classname传入（包括图片样式）</span></span><br><span class="line">  reWindows: PropTypes.string,                      <span class="comment">//老虎机的槽位classname传入（包括图片样式）</span></span><br><span class="line">  reGiftContainer: PropTypes.string,                <span class="comment">//礼物的classname传入（包括图片样式）</span></span><br><span class="line">  reStartBtn: PropTypes.string,                     <span class="comment">//启动按钮的classname传入</span></span><br><span class="line">  customTurns: PropTypes.number                     <span class="comment">//老虎机旋转圈数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提供的一些默认属性</span></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  slotDelay2: <span class="number">500</span>,  </span><br><span class="line">  slotDelay3: <span class="number">1000</span>,</span><br><span class="line">  engineDuration: <span class="number">8000</span>,</span><br><span class="line">  backgroundImg: <span class="built_in">require</span>(<span class="string">"./images/bg.png"</span>),</span><br><span class="line">  customTurns: <span class="number">2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> slot machines </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-ripple-button</title>
      <link href="/2019/10/16/react-ripple-button/"/>
      <url>/2019/10/16/react-ripple-button/</url>
      
        <content type="html"><![CDATA[<p>这是一个水波按钮的react组件封装<br>基于<a href="https://codepen.io/jh3y/pen/EKGXEY" target="_blank" rel="noopener">https://codepen.io/jh3y/pen/EKGXEY</a></p><h1 id="react-ripple-button"><a href="#react-ripple-button" class="headerlink" title="react-ripple-button"></a>react-ripple-button</h1><blockquote><p>a ripple-button component for React that from Ripple buttons <a href="https://codepen.io/jh3y/pen/EKGXEY" target="_blank" rel="noopener">https://codepen.io/jh3y/pen/EKGXEY</a></p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-ripple-button --save</span><br><span class="line">$ yarn add react-ripple-button</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RippleBtn <span class="keyword">from</span> <span class="string">"react-ripple-button"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> onClick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="number">565</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">RippleBtn</span> <span class="attr">btnClassName</span>=<span class="string">"test"</span> <span class="attr">text</span>=<span class="string">"test"</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span> /&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br><span class="line"></span><br><span class="line"><span class="comment">//css</span></span><br><span class="line">.test &#123;</span><br><span class="line">  background-color: red !important;</span><br><span class="line">  width: <span class="number">300</span>px;</span><br><span class="line">  height: <span class="number">150</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  btnClassName: PropTypes.string,      <span class="comment">//Custom component name</span></span><br><span class="line">  btnStyle: PropTypes.object,          <span class="comment">//Custom component style</span></span><br><span class="line">  onClick: PropTypes.func.isRequired,</span><br><span class="line">  text: PropTypes.string.isRequired    <span class="comment">//Custom component content</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  btnClassName: <span class="string">""</span>,</span><br><span class="line">  btnStyle: &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> ripple-button </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-flop</title>
      <link href="/2019/10/15/react-flop/"/>
      <url>/2019/10/15/react-flop/</url>
      
        <content type="html"><![CDATA[<p>react-flop组件<br>提供一个小功能翻转卡片功能可作为开奖翻转使用</p><h1 id="react-flop"><a href="#react-flop" class="headerlink" title="react-flop"></a>react-flop</h1><blockquote><p>A simple flop component for React</p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-flop --save</span><br><span class="line">$ yarn add react-flop</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    that.state = &#123;</span><br><span class="line">      haveGift: <span class="literal">false</span>,</span><br><span class="line">      isFlop: <span class="literal">false</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; haveGift, isFlop &#125; = that.state;</span><br><span class="line">    <span class="keyword">const</span> slot = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!isFlop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (haveGift) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>获奖了<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>GG<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> onClick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      that.setState(&#123;</span><br><span class="line">        isFlop: <span class="literal">true</span>,</span><br><span class="line">        haveGift: <span class="literal">true</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Flop</span><br><span class="line">        imgFLop=&#123;<span class="built_in">require</span>(<span class="string">"./images/WechatIMG3.png"</span>)&#125;</span><br><span class="line">        imgFLoped=&#123;<span class="built_in">require</span>(<span class="string">"./images/WechatIMG2.png"</span>)&#125;</span><br><span class="line">        slot=&#123;slot()&#125;</span><br><span class="line">        onClick=&#123;onClick&#125;</span><br><span class="line">        haveGift=&#123;haveGift&#125;</span><br><span class="line">        isFlop=&#123;isFlop&#125;</span><br><span class="line">        imgFLopWidth=&#123;<span class="number">686</span>&#125;</span><br><span class="line">        imgFLopHeight=&#123;<span class="number">272</span>&#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  imgFLop: PropTypes.string.isRequired,      <span class="comment">//Preflip picture</span></span><br><span class="line">  imgFLoped: PropTypes.string.isRequired,    <span class="comment">//Flipped picture</span></span><br><span class="line">  cardName: PropTypes.string,                <span class="comment">//Custom Components classname</span></span><br><span class="line">  slot: PropTypes.node,                      <span class="comment">//Reserved Node Slot</span></span><br><span class="line">  onClick: PropTypes.func.isRequired,        <span class="comment">//onclick</span></span><br><span class="line">  haveGift: PropTypes.bool,                  <span class="comment">//awarded or not</span></span><br><span class="line">  isFlop: PropTypes.bool,                    <span class="comment">//Flop or not</span></span><br><span class="line">  imgFLopWidth: PropTypes.number.isRequired, <span class="comment">//Picture width</span></span><br><span class="line">  imgFLopHeight: PropTypes.number.isRequired,<span class="comment">//Picture height</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  cardName: <span class="string">''</span>,</span><br><span class="line">  slot: <span class="literal">null</span>,</span><br><span class="line">  isFlop: <span class="literal">false</span>,</span><br><span class="line">  haveGift: <span class="literal">false</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-simple-websocket</title>
      <link href="/2019/10/11/react-simple-websocket/"/>
      <url>/2019/10/11/react-simple-websocket/</url>
      
        <content type="html"><![CDATA[<p>react websocket组件容器<br>提供 onOpen，onMessage,onError,onClose等方法,<br>是一个轻便的websocket组件<br>支持重连功能</p><h1 id="react-simple-websocket"><a href="#react-simple-websocket" class="headerlink" title="react-simple-websocket"></a>react-simple-websocket</h1><blockquote><p>A simple websocket component for React</p></blockquote><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install react-simple-websocket --save</span><br><span class="line">$ yarn add react-simple-websocket</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> SimpleWS <span class="keyword">from</span> <span class="string">'react-simple-websocket'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    that.state = &#123;</span><br><span class="line">      wsData: <span class="string">""</span>,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    that.sender = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onMessage = <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//get the data from ws</span></span><br><span class="line">    that.setState(&#123;</span><br><span class="line">      wsData: data</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  onOpen = <span class="function"><span class="params">sender</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    that.sender = sender;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//use sender to send your data</span></span><br><span class="line">    sender(<span class="string">"xxxxx"</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">   onClick = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    that.sender(<span class="string">'halo,it'</span>s me!<span class="string">');</span></span><br><span class="line"><span class="string">  &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  render() &#123;</span></span><br><span class="line"><span class="string">    return (</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;SimpleWS</span></span><br><span class="line"><span class="string">          url="ws://localhost:8080"</span></span><br><span class="line"><span class="string">          onOpen=&#123;that.onOpen&#125;</span></span><br><span class="line"><span class="string">          onMessage=&#123;that.onMessage&#125;</span></span><br><span class="line"><span class="string">          onClose=&#123;that.onClose&#125;</span></span><br><span class="line"><span class="string">        /&gt;</span></span><br><span class="line"><span class="string">        &lt;button onClick=&#123;that.onClick&#125;&gt;send&lt;/button&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    );</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br></pre></td></tr></table></figure><h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">  url: PropTypes.string.isRequired,</span><br><span class="line">  onOpen: PropTypes.func,</span><br><span class="line">  onMessage: PropTypes.func.isRequired,</span><br><span class="line">  onError: PropTypes.func,</span><br><span class="line">  onClose: PropTypes.func,</span><br><span class="line">  debug: PropTypes.bool,</span><br><span class="line">  reconnect: PropTypes.bool</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">  debug: <span class="literal">false</span>,</span><br><span class="line">  reconnect: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="License"><a href="#License" class="headerlink" title="License"></a>License</h1><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
          <category> npm package </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启古典吉他生涯</title>
      <link href="/2019/09/26/%E5%BC%80%E5%90%AF%E5%8F%A4%E5%85%B8%E5%90%89%E4%BB%96%E7%94%9F%E6%B6%AF/"/>
      <url>/2019/09/26/%E5%BC%80%E5%90%AF%E5%8F%A4%E5%85%B8%E5%90%89%E4%BB%96%E7%94%9F%E6%B6%AF/</url>
      
        <content type="html"><![CDATA[<p> 自我纠结了很久，在一瞬之间做出了决定。<br> 斥巨资购买了一把练习琴，同时寻觅一位老师求学解惑。<br> 总觉得这个决定可能会对人生路带来不同的可能。<br> 源于喜爱，始于迷茫。<br> 重新开始，忘掉之前。<br> 也希望各位在有生之年，如有一瞬的激动或者梦想就去尝试下。<br> 也许不一定非要成功，也许不一定可以成功。<br> 但是，短暂的人生需要那么一闪而过的光芒。<br> <img src="https://i.loli.net/2019/09/26/FGLb5O8z1PR4lVX.png" alt="cookbook.png"></p>]]></content>
      
      
      <categories>
          
          <category> 音乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 古典吉他 </tag>
            
            <tag> 乐器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>umi中使用yield call 执行promise函数</title>
      <link href="/2019/09/17/umi%E4%B8%AD%E4%BD%BF%E7%94%A8call-%E6%89%A7%E8%A1%8Cpromise%E5%87%BD%E6%95%B0/"/>
      <url>/2019/09/17/umi%E4%B8%AD%E4%BD%BF%E7%94%A8call-%E6%89%A7%E8%A1%8Cpromise%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//invoke 为一个promise 函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">get_account_auth</span>(<span class="params">authKey</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> arg = &#123; authKey &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> invoke(<span class="string">"account_auth"</span>, arg)</span><br><span class="line">    .then(<span class="function"><span class="params">resp</span> =&gt;</span> resp.data.token)</span><br><span class="line">    .catch(onError);</span><br><span class="line">&#125;</span><br><span class="line"> ======</span><br><span class="line">effects: &#123;</span><br><span class="line">    *getAuthKey(&#123; payload &#125;, &#123; call, put, race, select, take &#125;) &#123;</span><br><span class="line">      <span class="keyword">const</span> resp = <span class="keyword">yield</span> call(IndexApi.getAuthKey, &#123;&#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//call(fn,...arg)</span></span><br><span class="line">      <span class="keyword">const</span> token = <span class="keyword">yield</span> call(Get_account_auth, resp.data.authKey);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">yield</span> put(StateAt.index(&#123; <span class="attr">authKey</span>: resp.data.authKey, token &#125;));</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="下面-dva-的典型-model-例子"><a href="#下面-dva-的典型-model-例子" class="headerlink" title="下面 dva 的典型 model 例子"></a>下面 dva 的典型 model 例子</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">app.model(&#123;</span><br><span class="line">  namespace: <span class="string">"todo"</span>,</span><br><span class="line">  state: [],</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    add(state, &#123; <span class="attr">payload</span>: todo &#125;) &#123;</span><br><span class="line">      <span class="comment">// 保存数据到 state</span></span><br><span class="line">      <span class="keyword">return</span> [...state, todo];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  effects: &#123;</span><br><span class="line">    *save(&#123; <span class="attr">payload</span>: todo &#125;, &#123; put, call &#125;) &#123;</span><br><span class="line">      <span class="comment">// 调用 saveTodoToServer，成功后触发 `add` action 保存到 state</span></span><br><span class="line">      <span class="keyword">yield</span> call(saveTodoToServer, todo);</span><br><span class="line">      <span class="keyword">yield</span> put(&#123; <span class="attr">type</span>: <span class="string">"add"</span>, <span class="attr">payload</span>: todo &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  subscriptions: &#123;</span><br><span class="line">    setup(&#123; history, dispatch &#125;) &#123;</span><br><span class="line">      <span class="comment">// 监听 history 变化，当进入 `/` 时触发 `load` action</span></span><br><span class="line">      <span class="keyword">return</span> history.listen(<span class="function">(<span class="params">&#123; pathname &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (pathname === <span class="string">"/"</span>) &#123;</span><br><span class="line">          dispatch(&#123; <span class="attr">type</span>: <span class="string">"load"</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> dva </tag>
            
            <tag> umi.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Antd 修改全局暂无数据的默认图片</title>
      <link href="/2019/09/09/Antd-%E4%BF%AE%E6%94%B9%E5%85%A8%E5%B1%80%E6%9A%82%E6%97%A0%E6%95%B0%E6%8D%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%9B%BE%E7%89%87/"/>
      <url>/2019/09/09/Antd-%E4%BF%AE%E6%94%B9%E5%85%A8%E5%B1%80%E6%9A%82%E6%97%A0%E6%95%B0%E6%8D%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>项目中使用Antd时,遇到需要修改数据为空时的默认图片。<br>在相应的layout里的<code>ConfigProvider</code>中的config内做如下配置即可。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ConfigProvider, Empty &#125; <span class="keyword">from</span> <span class="string">'antd'</span>;</span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//你的layout</span></span><br><span class="line"><span class="keyword">const</span> layout = <span class="function"><span class="params">()</span> =&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> render() &#123;</span><br><span class="line">    <span class="keyword">const</span> renderEmpty = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Empty</span> <span class="attr">image</span>=<span class="string">&#123;Empty.PRESENTED_IMAGE_DEFAULT&#125;</span> /&gt;</span></span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> config = &#123;</span><br><span class="line">      autoInsertSpaceInButton: <span class="literal">false</span>,</span><br><span class="line">      <span class="comment">// csp: &#123; nonce: '' &#125;,</span></span><br><span class="line">      renderEmpty: renderEmpty,</span><br><span class="line">      <span class="comment">// getPopupContainer: () =&gt; document.body,</span></span><br><span class="line">      <span class="comment">// locale: ,</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">ConfigProvider</span> &#123;<span class="attr">...config</span>&#125;&gt;</span>&#123;layout&#125;<span class="tag">&lt;/<span class="name">ConfigProvider</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> Antd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好东西RunKit</title>
      <link href="/2019/07/09/%E5%A5%BD%E4%B8%9C%E8%A5%BFRunKit/"/>
      <url>/2019/07/09/%E5%A5%BD%E4%B8%9C%E8%A5%BFRunKit/</url>
      
        <content type="html"><![CDATA[<p>  RunKit – 超好用的在线代码编辑器，支持几万个npm包，在线即可引入</p><p>  使用截图：<br>  <img src="https://i.loli.net/2019/07/09/5d242f685983b84033.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Runkit </tag>
            
            <tag> 在线代码编辑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fragments</title>
      <link href="/2019/06/24/Fragments/"/>
      <url>/2019/06/24/Fragments/</url>
      
        <content type="html"><![CDATA[<p>Fragments 允许将子列表分组，而无需向 DOM 添加额外节点。</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Table</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;Columns /&gt;</span><br><span class="line">        &lt;<span class="regexp">/tr&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>table&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Columns</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;td&gt;Hello&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">        &lt;td&gt;World&lt;/</span>td&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Columns</span> /&gt;</span>需要返回多个 <span class="tag">&lt;<span class="name">td</span>&gt;</span> 元素以使渲染的 HTML 有效。</span><br><span class="line">如果在 <span class="tag">&lt;<span class="name">Columns</span> /&gt;</span> 的 render() 中使用了父 div，</span><br><span class="line">则生成的 HTML 将无效。</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Columns</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;React.Fragment&gt;</span><br><span class="line">        &lt;td&gt;Hello&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">        &lt;td&gt;World&lt;/</span>td&gt;</span><br><span class="line">      &lt;<span class="regexp">/React.Fragment&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这样可以正确的输出 <span class="tag">&lt;<span class="name">Table</span> /&gt;</span>：</span><br></pre></td></tr></table></figure><p>还可以用更骚的新的短语法来声明Fragments,<br>你可以像使用任何其他元素一样使用 &lt;&gt; &lt;/&gt;，除了它不支持 key 或属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Columns</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;&gt;</span><br><span class="line">        &lt;td&gt;Hello&lt;<span class="regexp">/td&gt;</span></span><br><span class="line"><span class="regexp">        &lt;td&gt;World&lt;/</span>td&gt;</span><br><span class="line">      &lt;<span class="regexp">/&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><p>请注意 目前许多工具尚不支持 ，所以直到工具支持之前，你可能要显式的使用 &lt;React.Fragment&gt;。</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react组合</title>
      <link href="/2019/06/21/react%E7%BB%84%E5%90%88/"/>
      <url>/2019/06/21/react%E7%BB%84%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>react 学习笔记–组合<br>有些组件无法提前知晓它们子组件的具体内容。<br>可以使用一个特殊的 <code><font color="#FF0000">children</font></code> prop 来将他们的子组件传递到渲染结果中：</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ParentComponent</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;<span class="string">'ParentComponent ParentComponent-'</span> + props.color&#125;&gt;</span><br><span class="line">      &#123;props.children&#125;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">function renderComponent() &#123;</span></span><br><span class="line"><span class="regexp">  return (</span></span><br><span class="line"><span class="regexp">    &lt;ParentComponent color="blue"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;h1 className="title"&gt;</span></span><br><span class="line"><span class="regexp">        111</span></span><br><span class="line"><span class="regexp">      &lt;/</span>h1&gt;</span><br><span class="line">      &lt;p className=<span class="string">"message"</span>&gt;</span><br><span class="line">        <span class="number">222</span></span><br><span class="line">      &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>ParentComponent&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以预留几个下几个位置，这种情况下我们可以不实用children</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ParentComponent</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"ParentComponent"</span>&gt;</span><br><span class="line">      &lt;div className=<span class="string">"ParentComponent-left"</span>&gt;</span><br><span class="line">        &#123;props.left&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;div className="ParentComponent-right"&gt;</span></span><br><span class="line"><span class="regexp">        &#123;props.right&#125;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">function App() &#123;</span></span><br><span class="line"><span class="regexp">  return (</span></span><br><span class="line"><span class="regexp">    &lt;ParentComponent</span></span><br><span class="line"><span class="regexp">      left=&#123;</span></span><br><span class="line"><span class="regexp">        &lt;Component1 /</span>&gt;</span><br><span class="line">      &#125;</span><br><span class="line">      right=&#123;</span><br><span class="line">        &lt;Component2 /&gt;</span><br><span class="line">      &#125; /&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-float-input</title>
      <link href="/2019/06/20/react-float-input/"/>
      <url>/2019/06/20/react-float-input/</url>
      
        <content type="html"><![CDATA[<p>碰到项目需要给输入框一个小效果类似这个</p><p><img src="https://i.loli.net/2019/06/20/5d0b65e9bc5c449605.gif" alt="floatInput"></p><p>大概思路将label绝对定位到input输入框内，点击input框后用transform将label缩小并上移<br>欢迎去npm下载使用插件 react-float-input 😊</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add react-float-input</span><br><span class="line">$ npm install react-float-input</span><br></pre></td></tr></table></figure><a id="more"></a><p>react dom结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"control"</span>&gt;</span><br><span class="line">        &lt;input</span><br><span class="line">        type=&#123;type&#125;</span><br><span class="line">        className=&#123;<span class="string">`input <span class="subst">$&#123;className&#125;</span>`</span>&#125;</span><br><span class="line">        onChange=&#123;that.handleNumberChange&#125;</span><br><span class="line">        data-value=&#123;dataValueLength&#125;</span><br><span class="line">        value=&#123;inputValue&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;label htmlFor=<span class="string">""</span> className=<span class="string">"label"</span>&gt;</span><br><span class="line">        &#123;label&#125;</span><br><span class="line">        &lt;<span class="regexp">/label&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>css 核心代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">.input &#123;</span><br><span class="line">  z-index: 0;</span><br><span class="line">  height: 48px;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  border: 1px solid rgba(232, 234, 239, 1);</span><br><span class="line">  box-shadow: 0 2px 4px 0 rgba(32, 49, 100, 0.05);</span><br><span class="line">  //点击出现效果</span><br><span class="line">  &amp;:focus + .label &#123;</span><br><span class="line">    transform: translateY(-10px) scale(0.85);</span><br><span class="line">  &#125;</span><br><span class="line">  //用data-value这个钩子，当其设定值等于0时，也就是删除input内输入时，复原初始效果</span><br><span class="line">  &amp;:not([data-value='0']) + .label &#123;</span><br><span class="line">    transform: translateY(-10px) scale(0.85);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.label &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 14px;</span><br><span class="line">  left: 12px;</span><br><span class="line">  z-index: 2;</span><br><span class="line">  height: 20px;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  line-height: 20px;</span><br><span class="line">  color: #000;</span><br><span class="line">  pointer-events: none; // 穿透label获取焦点用</span><br><span class="line">  cursor: text;</span><br><span class="line">  transition: all 0.2s ease-out;</span><br><span class="line">  transform-origin: top left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有兴趣可以尝试下 吼吼吼。。。</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> float input </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 每日一点(2) 跨域合理解决的方式</title>
      <link href="/2019/02/25/JS-%E6%AF%8F%E6%97%A5%E4%B8%80%E7%82%B9-2/"/>
      <url>/2019/02/25/JS-%E6%AF%8F%E6%97%A5%E4%B8%80%E7%82%B9-2/</url>
      
        <content type="html"><![CDATA[<p>(融入项目、技术延伸)<br>支持跨域方式有：<br>1、jsonp ： jsonp就是将一段js代码用src引入然后带一个回调函数，然后页面中写这个回调函数的具体方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度jsonp的例子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">(json)</span> </span>&#123;</span></span><br><span class="line">                alert(json.s)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=sd&amp;cb=show"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- jsonp就是将一段js代码用src引入然后带一个回调函数，然后页面中写这个回调函数的具体方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、iframe配合window自带的name属性来处理。</p><a id="more"></a><p>3、h5新增的postMessage来操作。<br>当然这些解决方案都不是常用方式，在实际开发当中并不实用，我来说说我在实际开发当中与后端配合的实际场景吧：如果是开发app那么就不符合同源策略肯定会出现跨域问题，那么我会让后端人员开启跨域功能，如果是php添加<code>header(&quot;Access-Control-Allow-Origin: *&quot;)</code>，如何是java添加<code>response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;)</code>，可以解决跨域问题，那么安全问题需要https协议来解决抓包软件截取数据。<br>如果后端人员不配合开启跨域权限怎么办呢？<br>其实后端人员不配合开启跨域是常有的事情，比如银行系统为了安全问题是不可能开启跨域的，他们会说：“你先在测试环境下开发，等上传到服务器上接口和网站是同一个域名就不存在跨域的问题。”但是咱们在本地开发还是会出现跨域问题，那么就需要安装chrome浏览器的cors插件来解决开发环境下面的跨域问题，等开发完成后上传到正式服务器就ok啦。<br>那么分析到这里，我们就有了比较完善的回答思路了。我们的回答要在深度和广度上进行延伸和扩展，还要多运用具体的应用场景帮助表述，这样既能体现我们技术上的水平很高，又能让我们的回答具有可信度。</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daily </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的css悬浮效果</title>
      <link href="/2019/02/22/%E7%AE%80%E5%8D%95%E7%9A%84css%E6%82%AC%E6%B5%AE%E6%95%88%E6%9E%9C/"/>
      <url>/2019/02/22/%E7%AE%80%E5%8D%95%E7%9A%84css%E6%82%AC%E6%B5%AE%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>这是一个简单的css hover悬浮效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">      height: 100vh;</span><br><span class="line">      width: 100%;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">      width: 300px;</span><br><span class="line">      height: 300px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.188235</span>);</span></span><br><span class="line">      transform: rotate(0deg) scale(1) translate(0%, 0%);</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">All</span> 0<span class="selector-class">.3s</span> <span class="selector-tag">ease</span>;</span></span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">box-shadow</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.188235</span>) 0<span class="selector-tag">px</span> 17<span class="selector-tag">px</span> 50<span class="selector-tag">px</span> 0<span class="selector-tag">px</span>;</span></span><br><span class="line">      transform: translate3d(0px, -2px, 0px);</span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">All</span> 0<span class="selector-class">.3s</span> <span class="selector-tag">ease</span>;</span></span><br><span class="line">      z-index: 10;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">      xx</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css 特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端屏幕自适应rem布局的情况</title>
      <link href="/2019/02/12/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B1%8F%E5%B9%95%E8%87%AA%E9%80%82%E5%BA%94rem%E5%B8%83%E5%B1%80%E7%9A%84%E6%83%85%E5%86%B5/"/>
      <url>/2019/02/12/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B1%8F%E5%B9%95%E8%87%AA%E9%80%82%E5%BA%94rem%E5%B8%83%E5%B1%80%E7%9A%84%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<p>##在自适应的rem布局下，不论什么情况一定要对img标签进行css样式控制大小。</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css注意事项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>umi-dva的使用想法</title>
      <link href="/2019/02/02/umi-dva%E7%9A%84%E4%BD%BF%E7%94%A8%E6%83%B3%E6%B3%95/"/>
      <url>/2019/02/02/umi-dva%E7%9A%84%E4%BD%BF%E7%94%A8%E6%83%B3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>新的项目使用阿里 umi 框架并配合上 dva 来管理状态</p><p>1.对于已进入页面就发出请求的情况，不再通过 page 内的动作触发，使用<br>modal 内相应页面的监听器 dispatch 一个 action</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">subscriptions: &#123;</span><br><span class="line">    setup(&#123; dispatch, history &#125;, done) &#123;</span><br><span class="line">       <span class="keyword">return</span> history.listen(<span class="function"><span class="params">location</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> pathname = _.trimEnd(_.toLower(location.pathname), <span class="string">'/'</span>);</span><br><span class="line">         <span class="keyword">switch</span> (pathname) &#123;</span><br><span class="line">           <span class="keyword">case</span> <span class="string">'/charge/in'</span>:</span><br><span class="line">             dispatch(</span><br><span class="line">               xxxAction(&#123;</span><br><span class="line">                payload</span><br><span class="line">               &#125;,ACTION_TYPE)</span><br><span class="line">             );</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">           <span class="keyword">default</span>:</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">     &#125;,</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li><p>不再对页面内做状态的直接修改，统一通过专门的 action 来发起。</p></li><li><p>数据流向<br>（1). 从 modal 中 dispatch 一个 action 动作一般可以是一个请求，然后确认了收到 response 消息内容后可以<br>将消息内容存在 reducer 中，然后在页面内关联提取<br>(2). 从页面中 dispatch 一个 action 动作一般也可以是一个请求或者修改某些数据，然后在其 generator 函数中 put 一个<br>新 action 来寸此次修改的相关数据，最后在页面内关联提取<br>例如：<br>这是一个 generator 函数，在收到 response 数据后 put 一个 saveTasklist 的 action 来存储此次数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">'lodash'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> initialState = &#123;</span><br><span class="line">    indexPage: &#123;</span><br><span class="line">        hasToken: <span class="literal">false</span>,</span><br><span class="line">        baseInfo: &#123;&#125;,</span><br><span class="line">        taskList: &#123;&#125;,</span><br><span class="line">        lotteryBase: &#123;&#125;,</span><br><span class="line">        taskReceive: &#123;&#125;,</span><br><span class="line">        taskSign: &#123;&#125;,</span><br><span class="line">        loading: <span class="literal">true</span>,</span><br><span class="line">        hasSign: <span class="literal">false</span>,</span><br><span class="line">        modals: &#123;</span><br><span class="line">            error: &#123;</span><br><span class="line">                visible: <span class="literal">false</span>,</span><br><span class="line">                message: <span class="string">''</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    namespace: xxxxxx,</span><br><span class="line">    state: _.cloneDeep(initialState),</span><br><span class="line">    effects: &#123;</span><br><span class="line">        *getTaskList(&#123; payload &#125;, &#123; put, call, select &#125;) &#123;</span><br><span class="line">                <span class="keyword">const</span> resp = <span class="keyword">yield</span> call(indexService.getTaskList, payload);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (resp.error_code === <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">yield</span> put(</span><br><span class="line">                        indexAction.actionSaveTaskList(&#123;</span><br><span class="line">                            taskList: resp.data,</span><br><span class="line">                        &#125;)</span><br><span class="line">                    );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        reducers: &#123;</span><br><span class="line">            saveTaskList(state, &#123; payload &#125;) &#123;</span><br><span class="line">                <span class="keyword">const</span> dst = &#123; ...state &#125;;</span><br><span class="line"></span><br><span class="line">                dst.indexPage.taskList = payload.taskList;</span><br><span class="line">                <span class="keyword">return</span> dst;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> dva </tag>
            
            <tag> umi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对于react 生命周期的相关使用</title>
      <link href="/2019/02/02/%E5%AF%B9%E4%BA%8Ereact-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/02/02/%E5%AF%B9%E4%BA%8Ereact-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p> 1.之前的项目对于reat工程大多过度依赖生命周期，在使用umi之后，结构开项目组件与页面间耦合性后<br> 剔除对于生命周期的影响。<br> 2.组件使用prop-type来保证传值的可靠性，通过props新值来触发ui视图更新</p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 生命周期 </tag>
            
            <tag> prop-type </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器人抓取币安kline交易数据并通过ws推送</title>
      <link href="/2019/01/28/%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%93%E5%8F%96%E5%B8%81%E5%AE%89kline%E4%BA%A4%E6%98%93%E6%95%B0%E6%8D%AE%E5%B9%B6%E9%80%9A%E8%BF%87ws%E6%8E%A8%E9%80%81/"/>
      <url>/2019/01/28/%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%93%E5%8F%96%E5%B8%81%E5%AE%89kline%E4%BA%A4%E6%98%93%E6%95%B0%E6%8D%AE%E5%B9%B6%E9%80%9A%E8%BF%87ws%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<p>代码如下：</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; Wechaty &#125; = <span class="built_in">require</span>(<span class="string">"wechaty"</span>);</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">"moment"</span>);</span><br><span class="line"><span class="keyword">const</span> WebSocket = <span class="built_in">require</span>(<span class="string">"ws"</span>);</span><br><span class="line"><span class="keyword">const</span> bot = <span class="keyword">new</span> Wechaty();</span><br><span class="line"><span class="keyword">const</span> maxV = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wsDatas = &#123;</span><br><span class="line">  <span class="string">"1m"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_1m"</span>,</span><br><span class="line">    min: <span class="number">3</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"5m"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_5m"</span>,</span><br><span class="line">    min: <span class="number">5</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"15m"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_15m"</span>,</span><br><span class="line">    min: <span class="number">8</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"1h"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_1h"</span>,</span><br><span class="line">    min: <span class="number">15</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"6h"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_6h"</span>,</span><br><span class="line">    min: <span class="number">50</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"1d"</span>: &#123;</span><br><span class="line">    url: <span class="string">"wss://stream2.binance.cloud/stream?streams=btcusdt@kline_1d"</span>,</span><br><span class="line">    min: <span class="number">80</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">openWebsocket = <span class="function">(<span class="params">url, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> ws = <span class="keyword">new</span> WebSocket(url);</span><br><span class="line">  ws.on(<span class="string">"open"</span>, (open = <span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;));</span><br><span class="line">  ws.on(</span><br><span class="line">    <span class="string">"message"</span>,</span><br><span class="line">    (incoming = <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> klineData = <span class="built_in">eval</span>(<span class="string">"("</span> + data + <span class="string">")"</span>).data.k;</span><br><span class="line">      <span class="keyword">const</span> &#123; t, T, o, c, h, l &#125; = klineData;</span><br><span class="line">      <span class="keyword">const</span> high = <span class="built_in">Math</span>.max(o, c);</span><br><span class="line">      <span class="keyword">const</span> low = <span class="built_in">Math</span>.min(o, c);</span><br><span class="line">      <span class="keyword">const</span> max = h - l;</span><br><span class="line">      callback(max, low, high, +l, +h);</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维码</span></span><br><span class="line">bot.on(<span class="string">"scan"</span>, (url, code) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="regexp">/201|200/</span>.test(<span class="built_in">String</span>(code))) &#123;</span><br><span class="line">    <span class="keyword">let</span> loginUrl = url.replace(<span class="regexp">/\/qrcode\//</span>, <span class="string">"/l/"</span>);</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">"qrcode-terminal"</span>).generate(loginUrl, &#123; <span class="attr">small</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登陆自动发送</span></span><br><span class="line">bot.on(<span class="string">"login"</span>, <span class="keyword">async</span> user =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`user <span class="subst">$&#123;user&#125;</span> login`</span>);</span><br><span class="line">  <span class="keyword">let</span> activePushRoom = <span class="keyword">await</span> bot.Room.find(&#123; <span class="attr">topic</span>: <span class="string">"测试群"</span> &#125;);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"activePushRoom"</span>, activePushRoom);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (activePushRoom) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> wsDatas) &#123;</span><br><span class="line">      openWebsocket(wsDatas[key].url, (max, low, high, l, h) =&gt; &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(max, low, high, l, h);</span><br><span class="line">        <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm"</span>);</span><br><span class="line">        <span class="keyword">if</span> ((high - low) * <span class="number">3</span> &lt;= low - l &amp;&amp; low - l &gt; wsDatas[key].min) &#123;</span><br><span class="line">          activePushRoom.say(<span class="string">`<span class="subst">$&#123;now&#125;</span> BTC/USDT <span class="subst">$&#123;key&#125;</span> 出现T线 请留意 可以猜涨`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((high - low) * <span class="number">3</span> &lt;= h - high &amp;&amp; h - high &gt; wsDatas[key].min) &#123;</span><br><span class="line">          activePushRoom.say(<span class="string">`<span class="subst">$&#123;now&#125;</span> BTC/USDT <span class="subst">$&#123;key&#125;</span> 出现T线 请留意 可以猜跌`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (key == <span class="string">"1m"</span> &amp;&amp; max &gt; maxV) &#123;</span><br><span class="line">          activePushRoom.say(<span class="string">`<span class="subst">$&#123;now&#125;</span> BTC/USDT <span class="subst">$&#123;key&#125;</span> 变化幅度较大 请留意`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行</span></span><br><span class="line">bot.start();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> huobi </tag>
            
            <tag> wechaty </tag>
            
            <tag> node </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决移动端web页面点击后记住位置没有回到顶部的办法</title>
      <link href="/2019/01/24/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AFweb%E9%A1%B5%E9%9D%A2%E7%82%B9%E5%87%BB%E5%90%8E%E8%AE%B0%E4%BD%8F%E4%BD%8D%E7%BD%AE%E6%B2%A1%E6%9C%89%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E7%9A%84%E5%8A%9E%E6%B3%95/"/>
      <url>/2019/01/24/%E8%A7%A3%E5%86%B3%E7%A7%BB%E5%8A%A8%E7%AB%AFweb%E9%A1%B5%E9%9D%A2%E7%82%B9%E5%87%BB%E5%90%8E%E8%AE%B0%E4%BD%8F%E4%BD%8D%E7%BD%AE%E6%B2%A1%E6%9C%89%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E7%9A%84%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>使用 react-router 的 withRouter 方法来解决</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScrollToTop</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  componentDidUpdate(prevProps) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.props.location !== prevProps.location) &#123;</span><br><span class="line">      <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.props.children;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> withRouter(ScrollToTop);</span><br><span class="line">Then render it at the top <span class="keyword">of</span> your app, but below Routerconst App = <span class="function"><span class="params">()</span> =&gt;</span> (</span><br><span class="line">  &lt;Router&gt;</span><br><span class="line">    &lt;ScrollToTop&gt;</span><br><span class="line">      &lt;App/&gt;</span><br><span class="line">    &lt;<span class="regexp">/ScrollToTop&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>Router&gt;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// or just render it bare anywhere you want, but just one :)</span></span><br><span class="line">&lt;ScrollToTop/&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>这是在使用umi框架下在layout 组件（layouts/index.js 或者 pages 子目录下的 _layout.js）的<br>componentDidUpdate 里决定是否 scroll to top.<br>layout/layout.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span>;</span><br><span class="line"><span class="keyword">import</span> withRouter <span class="keyword">from</span> <span class="string">'umi/withRouter'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.less'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BasicLayout</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  state = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">    children: PropTypes.node.isRequired,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> defaultProps = &#123;</span><br><span class="line">    children: &#123;&#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *  scrollToTop</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;*&#125;</span> <span class="variable">prevProps</span></span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  componentDidUpdate(prevProps) &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (that.props.location !== prevProps.location) &#123;</span><br><span class="line">      <span class="built_in">window</span>.scrollTo(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  renderContent = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; children &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">main</span> <span class="attr">className</span>=<span class="string">&#123;styles.content&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">main</span>&gt;</span></span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.main&#125;</span>&gt;</span>&#123;that.renderContent()&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> withRouter(BasicLayout);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> umi </tag>
            
            <tag> web相关 </tag>
            
            <tag> react-router </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信机器人 wechaty web版</title>
      <link href="/2019/01/18/%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA-wechaty-web%E7%89%88/"/>
      <url>/2019/01/18/%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA-wechaty-web%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>这个脚本我用来启动机器人，在两种情况下回去请求火币法币交易的接口：</p><ol><li>在群聊名称为’溜溜球’，’666’，这三个群内发送群聊信息中包含’eth 法币出售价格’或者<br>‘eth 法币购买价格’，或者把 eth 换成 btc 都会去请求火币法币交易接口，通过 promise 抛出时时价格。</li><li>在监听到登陆成功后，会开启定时器两分钟一次轮询上文提到的接口，通过 promise 抛出时时价格。<br></li></ol><p>具体代如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; Wechaty &#125; = <span class="built_in">require</span>(<span class="string">"wechaty"</span>);</span><br><span class="line"><span class="keyword">const</span> nodeHttp = <span class="built_in">require</span>(<span class="string">"./core"</span>);</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">"moment"</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; FileBox &#125; = <span class="built_in">require</span>(<span class="string">"file-box"</span>);</span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">"querystring"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> targetUrl = <span class="string">"https://otc-api.eiijo.cn/v1/data/trade-market?"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> EthSellData = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">3</span>,</span><br><span class="line">  tradeType: <span class="string">"sell"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> EthBuyData = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">3</span>,</span><br><span class="line">  tradeType: <span class="string">"buy"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BtcSellData = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">1</span>,</span><br><span class="line">  tradeType: <span class="string">"sell"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BtcBuyData = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">1</span>,</span><br><span class="line">  tradeType: <span class="string">"buy"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bot = <span class="keyword">new</span> Wechaty();</span><br><span class="line"><span class="keyword">let</span> coinPrice = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> targetCoinPrice = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> IntervalethCoinContent = qs.stringify(EthSellData);</span><br><span class="line"><span class="keyword">let</span> IntervalbtcCoinContent = qs.stringify(BtcSellData);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> engineCore = <span class="function">(<span class="params">url, coinContent, targetPrice, room</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">new</span> <span class="built_in">Promise</span>(nodeHttp.coreReq(url, coinContent, targetPrice))</span><br><span class="line">    .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      targetCoinPrice = result.join(<span class="string">","</span>);</span><br><span class="line">      room.say(</span><br><span class="line">        <span class="string">`有情况，eth法币出售价格低于<span class="subst">$&#123;targetPrice&#125;</span>`</span> +</span><br><span class="line">          targetCoinPrice +</span><br><span class="line">          <span class="string">" --来自ShowPenZ的小机器人"</span> +</span><br><span class="line">          now</span><br><span class="line">      );</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span><br><span class="line">      coinPrice = reason.join(<span class="string">","</span>);</span><br><span class="line">      room.say(coinPrice + <span class="string">" --来自ShowPenZ的小机器人"</span> + now);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">bot.on(<span class="string">"scan"</span>, (url, code) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="regexp">/201|200/</span>.test(<span class="built_in">String</span>(code))) &#123;</span><br><span class="line">    <span class="keyword">let</span> loginUrl = url.replace(<span class="regexp">/\/qrcode\//</span>, <span class="string">"/l/"</span>);</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">"qrcode-terminal"</span>).generate(loginUrl, &#123; <span class="attr">small</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">bot.on(<span class="string">"login"</span>, <span class="keyword">async</span> user =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> activePushRoom = <span class="keyword">await</span> bot.Room.find(<span class="string">"2号收割机"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">await</span> bot.Room.find(<span class="string">"2号收割机"</span>)) &#123;</span><br><span class="line">    <span class="keyword">const</span> ethInterval = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> <span class="built_in">Promise</span>(nodeHttp.coreReq(targetUrl, IntervalethCoinContent, <span class="number">800</span>))</span><br><span class="line">        .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">          targetCoinPrice = result.join(<span class="string">","</span>);</span><br><span class="line">          activePushRoom.say(</span><br><span class="line">            <span class="string">"ETH法币出售有情况!低于800了"</span> +</span><br><span class="line">              targetCoinPrice +</span><br><span class="line">              <span class="string">"老哥下手吧！"</span> +</span><br><span class="line">              now</span><br><span class="line">          );</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span><br><span class="line">          coinPrice = reason.join(<span class="string">","</span>);</span><br><span class="line">          activePushRoom.say(</span><br><span class="line">            <span class="string">"ETH法币出售行情！"</span> + coinPrice + <span class="string">"老哥先观望下！"</span> + now</span><br><span class="line">          );</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;, <span class="number">120000</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> btcInterval = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> <span class="built_in">Promise</span>(nodeHttp.coreReq(targetUrl, IntervalbtcCoinContent, <span class="number">24200</span>))</span><br><span class="line">        .then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">          targetCoinPrice = result.join(<span class="string">","</span>);</span><br><span class="line">          activePushRoom.say(</span><br><span class="line">            <span class="string">"BTC法币出售有情况!低于24200了"</span> +</span><br><span class="line">              targetCoinPrice +</span><br><span class="line">              <span class="string">"老哥下手吧！"</span> +</span><br><span class="line">              now</span><br><span class="line">          );</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">reason</span> =&gt;</span> &#123;</span><br><span class="line">          coinPrice = reason.join(<span class="string">","</span>);</span><br><span class="line">          activePushRoom.say(</span><br><span class="line">            <span class="string">"BTC法币出售行情！"</span> + coinPrice + <span class="string">"老哥先观望下！"</span> + now</span><br><span class="line">          );</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;, <span class="number">120000</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//   const contactList = await bot.Contact.find(&#123; alias: "ShowPenZ" &#125;); // find allof the contacts whose name is 'ruirui'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//   await contactList.say("大佬你好");</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">bot.on(<span class="string">"message"</span>, <span class="keyword">async</span> message =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> contact = message.from();</span><br><span class="line">  <span class="keyword">const</span> content = message.text();</span><br><span class="line">  <span class="keyword">const</span> room = message.room();</span><br><span class="line">  <span class="keyword">let</span> coinContent = <span class="literal">null</span>; <span class="comment">//coin param</span></span><br><span class="line">  <span class="keyword">let</span> targetRoom = []; <span class="comment">//Storage target room</span></span><br><span class="line">  <span class="keyword">let</span> keyrooms = <span class="keyword">await</span> bot.Room.findAll(); <span class="comment">// search all room</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (room) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(</span><br><span class="line">      <span class="string">`Room: <span class="subst">$&#123;room.topic()&#125;</span> Contact: <span class="subst">$&#123;contact.name()&#125;</span> Content: <span class="subst">$&#123;content&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    keyrooms.map(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (</span><br><span class="line">        res.payload.topic === <span class="string">"666"</span> ||</span><br><span class="line">        res.payload.topic === <span class="string">"溜溜球"</span></span><br><span class="line">      ) &#123;</span><br><span class="line">        targetRoom.push(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    targetRoom.map(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="regexp">/eth法币出售价格/</span>.test(content)) &#123;</span><br><span class="line">          coinContent = qs.stringify(EthSellData);</span><br><span class="line">          engineCore(targetUrl, coinContent, <span class="number">800</span>, res);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/eth法币购买价格/</span>.test(content)) &#123;</span><br><span class="line">          coinContent = qs.stringify(EthBuyData);</span><br><span class="line">          engineCore(targetUrl, coinContent, <span class="number">860</span>, res);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/btc法币出售价格/</span>.test(content)) &#123;</span><br><span class="line">          coinContent = qs.stringify(BtcSellData);</span><br><span class="line">          engineCore(targetUrl, coinContent, <span class="number">24200</span>, res);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="regexp">/btc法币购买价格/</span>.test(content)) &#123;</span><br><span class="line">          coinContent = qs.stringify(BtcBuyData);</span><br><span class="line">          engineCore(targetUrl, coinContent, <span class="number">25200</span>, res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Contact: <span class="subst">$&#123;contact.name()&#125;</span> Content: <span class="subst">$&#123;content&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">bot.start();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信机器人 </tag>
            
            <tag> wechaty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简陋脚本的更新1</title>
      <link href="/2019/01/17/%E7%AE%80%E9%99%8B%E8%84%9A%E6%9C%AC%E7%9A%84%E6%9B%B4%E6%96%B01/"/>
      <url>/2019/01/17/%E7%AE%80%E9%99%8B%E8%84%9A%E6%9C%AC%E7%9A%84%E6%9B%B4%E6%96%B01/</url>
      
        <content type="html"><![CDATA[<p>接着上一篇的更新</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">"https"</span>);</span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">"querystring"</span>);</span><br><span class="line"><span class="keyword">const</span> _ = <span class="built_in">require</span>(<span class="string">"lodash"</span>);</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">"moment"</span>);</span><br><span class="line"><span class="comment">// let mysql = require('mysql');</span></span><br><span class="line"><span class="keyword">let</span> coinprice = [];</span><br><span class="line"><span class="keyword">let</span> targetCoinprice = [];</span><br><span class="line"><span class="keyword">let</span> info = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">"https://otc-api.eiijo.cn/v1/data/trade-market?"</span>;</span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">3</span>,</span><br><span class="line">  tradeType: <span class="string">"sell"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> content = qs.stringify(data);</span><br><span class="line"><span class="comment">// const intervalObj = setInterval(() =&gt; &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> coreReq = <span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> req = https.get(url + content, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> json = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(res.statusCode, <span class="string">"时间:"</span> + now);</span><br><span class="line">    <span class="keyword">if</span> (res.statusCode === <span class="number">200</span>) &#123;</span><br><span class="line">      res.setEncoding(<span class="string">"utf8"</span>);</span><br><span class="line">      res.on(<span class="string">"data"</span>, d =&gt; &#123;</span><br><span class="line">        json += d;</span><br><span class="line">      &#125;);</span><br><span class="line">      res.on(<span class="string">"end"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取到的数据</span></span><br><span class="line">        json = <span class="built_in">JSON</span>.parse(json);</span><br><span class="line">        _.map(json.data, res =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.price &lt;= <span class="number">800</span>) &#123;</span><br><span class="line">            targetCoinprice.push(res.price);</span><br><span class="line">            resolve(targetCoinprice);</span><br><span class="line">            <span class="comment">// targetCoinprice = [];</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// coinprice.push(res.price);</span></span><br><span class="line">            <span class="built_in">console</span>.log(res.price);</span><br><span class="line">            reject(res.price);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  req.on(<span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"problem with request: "</span> + e.message);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  req.end();</span><br><span class="line">  <span class="comment">// &#125;, 20000);</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports.coreReq = coreReq;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> huobi </tag>
            
            <tag> node 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简陋的node脚本抓取huobi法币交易的价格</title>
      <link href="/2019/01/16/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84node%E8%84%9A%E6%9C%AC%E6%8A%93%E5%8F%96huobi%E6%B3%95%E5%B8%81%E4%BA%A4%E6%98%93%E7%9A%84%E4%BB%B7%E6%A0%BC/"/>
      <url>/2019/01/16/%E4%B8%80%E4%B8%AA%E7%AE%80%E9%99%8B%E7%9A%84node%E8%84%9A%E6%9C%AC%E6%8A%93%E5%8F%96huobi%E6%B3%95%E5%B8%81%E4%BA%A4%E6%98%93%E7%9A%84%E4%BB%B7%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<p>核心代码 core.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: showpen</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">"https"</span>);</span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">"querystring"</span>);</span><br><span class="line"><span class="keyword">const</span> _ = <span class="built_in">require</span>(<span class="string">"lodash"</span>);</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">"moment"</span>);</span><br><span class="line"><span class="comment">// let mysql = require('mysql');</span></span><br><span class="line"><span class="keyword">const</span> targerCoinPrice = <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">"https://otc-api.eiijo.cn/v1/data/trade-market?"</span>;</span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line">  country: <span class="number">37</span>,</span><br><span class="line">  currency: <span class="number">1</span>,</span><br><span class="line">  payMethod: <span class="number">0</span>,</span><br><span class="line">  currPage: <span class="number">1</span>,</span><br><span class="line">  coinId: <span class="number">3</span>,</span><br><span class="line">  tradeType: <span class="string">"sell"</span>,</span><br><span class="line">  blockType: <span class="string">"general"</span>,</span><br><span class="line">  online: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> content = qs.stringify(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> intervalObj = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> req = https.get(url + content, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> json = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">let</span> now = moment(<span class="keyword">new</span> <span class="built_in">Date</span>()).format(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(res.statusCode, <span class="string">"时间:"</span> + now);</span><br><span class="line">    <span class="keyword">if</span> (res.statusCode === <span class="number">200</span>) &#123;</span><br><span class="line">      res.on(<span class="string">"data"</span>, d =&gt; &#123;</span><br><span class="line">        json += d;</span><br><span class="line">      &#125;);</span><br><span class="line">      res.on(<span class="string">"end"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取到的数据</span></span><br><span class="line">        json = <span class="built_in">JSON</span>.parse(json);</span><br><span class="line">        _.map(json.data, res =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.price &lt;= targerCoinPrice) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"有情况,已有ETH价格低于800！"</span>);</span><br><span class="line">            <span class="comment">//可以书写需要的逻辑，比如邮件通知，微信机器人通知等，保证第一时间收取到阈值价格</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  req.on(<span class="string">"error"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"problem with request: "</span> + e.message);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  req.end();</span><br><span class="line">&#125;, <span class="number">20000</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><p>一些用到的包 –package.json一览</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"nodehttp"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"core.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"ShowPenZ"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"lodash"</span>: <span class="string">"^4.17.11"</span>,</span><br><span class="line">    <span class="attr">"moment"</span>: <span class="string">"^2.23.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"eslint"</span>: <span class="string">"^5.12.0"</span>,</span><br><span class="line">    <span class="attr">"eslint-config-airbnb"</span>: <span class="string">"^17.1.0"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.28.4"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"engines"</span>: &#123;</span><br><span class="line">    <span class="attr">"node"</span>: <span class="string">"&gt;=8.0.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> huobi </tag>
            
            <tag> node 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react 代码风格优化</title>
      <link href="/2019/01/15/react-%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%BC%98%E5%8C%96/"/>
      <url>/2019/01/15/react-%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>当我们使用antd时，通常会直接将demo代码段复制下来使用<br>虽然方便不过却总感觉比较冗长，不便于对于每个横行的修改与阅读，例如：</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;Form onSubmit=&#123;handleSubmit&#125; className=&#123;styles.loginForm&#125; hideRequiredMark&gt;</span><br><span class="line">         &lt;Form.Item &#123;...formItemLayout&#125;&gt;</span><br><span class="line">           &#123;getFieldDecorator(<span class="string">'phone'</span>, &#123;</span><br><span class="line">             initialValue: &#123; <span class="attr">iso2</span>: <span class="string">'cn'</span>, <span class="attr">dialCode</span>: <span class="string">'86'</span> &#125;,</span><br><span class="line">             rules: [</span><br><span class="line">               &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: formatMessage(&#123; <span class="attr">id</span>: <span class="string">'page.user.signIn.inputNumber'</span> &#125;) &#125;,</span><br><span class="line">               &#123; validator &#125;,</span><br><span class="line">             ],</span><br><span class="line">           &#125;)(<span class="xml"><span class="tag">&lt;<span class="name">IntlTelInput</span> <span class="attr">placeholder</span>=<span class="string">&#123;formatMessage(&#123;</span> <span class="attr">id:</span> '<span class="attr">page.user.signIn.PhoneNumber</span>' &#125;)&#125; /&gt;</span></span>)&#125;</span><br><span class="line">         &lt;<span class="regexp">/Form.Item&gt;</span></span><br><span class="line"><span class="regexp">         &lt;Form.Item &#123;...formItemLayout&#125;&gt;</span></span><br><span class="line"><span class="regexp">           &lt;Row gutter=&#123;8&#125;&gt;</span></span><br><span class="line"><span class="regexp">             &lt;Col span=&#123;10&#125;&gt;</span></span><br><span class="line"><span class="regexp">               &#123;getFieldDecorator('phone_code', &#123;</span></span><br><span class="line"><span class="regexp">                 rules: [&#123; required: true, message: formatMessage(&#123; id: 'page.user.signIn.inputSmsCode' &#125;) &#125;],</span></span><br><span class="line"><span class="regexp">               &#125;)(</span></span><br><span class="line"><span class="regexp">                 &lt;SendCode</span></span><br><span class="line"><span class="regexp">                   type="phone"</span></span><br><span class="line"><span class="regexp">                   businessType=&#123;3&#125;</span></span><br><span class="line"><span class="regexp">                   phone=&#123;_.get(getFieldValue('phone'), 'phone')&#125;</span></span><br><span class="line"><span class="regexp">                   nationCode=&#123;_.get(getFieldValue('phone'), 'dialCode')&#125;</span></span><br><span class="line"><span class="regexp">                   className=&#123;styles.sendSmsCode&#125;</span></span><br><span class="line"><span class="regexp">                   disabled=&#123;disabled&#125;</span></span><br><span class="line"><span class="regexp">                   placeholder=&#123;formatMessage(&#123; id: 'page.user.signIn.smsCode' &#125;)&#125;</span></span><br><span class="line"><span class="regexp">                 /</span>&gt;</span><br><span class="line">               )&#125;</span><br><span class="line">             &lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">           &lt;/</span>Row&gt;</span><br><span class="line">         &lt;<span class="regexp">/Form.Item&gt;</span></span><br><span class="line"><span class="regexp">         &lt;Form.Item &#123;...formItemLayout&#125;&gt;</span></span><br><span class="line"><span class="regexp">           &#123;getFieldDecorator('password', &#123;</span></span><br><span class="line"><span class="regexp">             rules: [&#123; required: true, message: formatMessage(&#123; id: 'page.user.signIn.requirePwd' &#125;) &#125;],</span></span><br><span class="line"><span class="regexp">           &#125;)(</span></span><br><span class="line"><span class="regexp">             &lt;Input</span></span><br><span class="line"><span class="regexp">               type="password"</span></span><br><span class="line"><span class="regexp">               autoComplete="new-password"</span></span><br><span class="line"><span class="regexp">               placeholder=&#123;formatMessage(&#123; id: 'page.user.signIn.password' &#125;)&#125;</span></span><br><span class="line"><span class="regexp">             /</span>&gt;</span><br><span class="line">           )&#125;</span><br><span class="line">         &lt;<span class="regexp">/Form.Item&gt;</span></span><br><span class="line"><span class="regexp">         &lt;Form.Item className=&#123;styles.btnLoginPart&#125;&gt;</span></span><br><span class="line"><span class="regexp">           &lt;Button type="primary" htmlType="submit" className=&#123;styles.loginFormButton&#125; loading=&#123;loading&#125;&gt;</span></span><br><span class="line"><span class="regexp">             &#123;formatMessage(&#123; id: 'page.user.signIn.login' &#125;)&#125;</span></span><br><span class="line"><span class="regexp">           &lt;/</span>Button&gt;</span><br><span class="line">           &lt;div className=&#123;styles.chooseAction&#125;&gt;</span><br><span class="line">             &#123;<span class="comment">/* &lt;Link className=&#123;styles.loginFormForgot&#125; to="/user/forgotPassword"&gt;</span></span><br><span class="line"><span class="comment">               &#123;formatMessage(&#123; id: 'page.user.signIn.forgot' &#125;)&#125;</span></span><br><span class="line"><span class="comment">             &lt;/Link&gt; */</span>&#125;</span><br><span class="line">             &lt;Link to=<span class="string">"/user/signUp"</span>&gt;&#123;formatMessage(&#123; <span class="attr">id</span>: <span class="string">'page.user.signIn.register'</span> &#125;)&#125;&lt;<span class="regexp">/Link&gt;</span></span><br><span class="line"><span class="regexp">           &lt;/</span>div&gt;</span><br><span class="line">         &lt;<span class="regexp">/Form.Item&gt;</span></span><br><span class="line"><span class="regexp">       &lt;/</span>Form&gt;</span><br></pre></td></tr></table></figure><p>现在我们将表格每个item切开单独用函数间隔开，最后再通过函数渲染组合回去，这样每个独立的item便于我们的修改与阅读，当然代码量势必会增加些许，这个可以视情况而做定夺，不过代码总是会需要修改维护的，构建的时候多花些时间，也许能减少成倍的维护时间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">renderAppName = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; form, info &#125; = that.props;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// const validator = (rule, value, callback) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//   if (getCharLength(value) &gt; 100) &#123;</span></span><br><span class="line">    <span class="comment">//     callback(formatMessage(&#123; id: 'page.application.edit.form.appName.rule.length' &#125;));</span></span><br><span class="line">    <span class="comment">//   &#125; else &#123;</span></span><br><span class="line">    <span class="comment">//     callback();</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _.map(SUPPORT_LANGUAGE, lang =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> label = <span class="string">`<span class="subst">$&#123;formatMessage(&#123; id: <span class="string">'page.application.edit.form.appName'</span> &#125;</span>)&#125;(<span class="subst">$&#123;formatMessage(&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">        id: <span class="string">`page.application.list.table.locales.<span class="subst">$&#123;lang&#125;</span>`</span>,</span></span></span><br><span class="line"><span class="string"><span class="subst">      &#125;</span>)&#125;)`</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> (</span><br><span class="line">        &lt;Form.Item key=&#123;<span class="string">`appName_<span class="subst">$&#123;lang&#125;</span>`</span>&#125; label=&#123;label&#125; &#123;...FORM_LAYOUT&#125;&gt;</span><br><span class="line">          &#123;form.getFieldDecorator(<span class="string">`appName_<span class="subst">$&#123;lang&#125;</span>`</span>, &#123;</span><br><span class="line">            initialValue: _.get(info, <span class="string">`app_name.<span class="subst">$&#123;lang&#125;</span>`</span>),</span><br><span class="line">            validateFirst: <span class="literal">true</span>,</span><br><span class="line">            rules: [</span><br><span class="line">              &#123;</span><br><span class="line">                required: <span class="literal">true</span>,</span><br><span class="line">                whitespace: <span class="literal">true</span>,</span><br><span class="line">                message: formatMessage(&#123; <span class="attr">id</span>: <span class="string">'page.application.edit.form.appName.rule.required'</span> &#125;),</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                max: <span class="number">50</span>,</span><br><span class="line">                message: formatMessage(&#123; <span class="attr">id</span>: <span class="string">'page.application.edit.form.appName.rule.length'</span> &#125;),</span><br><span class="line">              &#125;,</span><br><span class="line">            ],</span><br><span class="line">          &#125;)(<span class="xml"><span class="tag">&lt;<span class="name">Input</span> <span class="attr">placeholder</span>=<span class="string">&#123;formatMessage(&#123;</span> <span class="attr">id:</span> '<span class="attr">page.application.edit.form.appName.placeholder</span>' &#125;)&#125; /&gt;</span></span>)&#125;</span><br><span class="line">        &lt;<span class="regexp">/Form.Item&gt;</span></span><br><span class="line"><span class="regexp">      );</span></span><br><span class="line"><span class="regexp">    &#125;);</span></span><br><span class="line"><span class="regexp">  &#125;;</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">  render() &#123;</span></span><br><span class="line"><span class="regexp">    const that = this;</span></span><br><span class="line"><span class="regexp">    const &#123; form, onSubmit, onError &#125; = that.props;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    const handleSubmit = e =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      e.preventDefault();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      form.validateFields((err, values) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        if (err) &#123;</span></span><br><span class="line"><span class="regexp">          return _.isFunction(onError) &amp;&amp; onError(err);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        return _.isFunction(onSubmit) &amp;&amp; onSubmit(that.convertData(values));</span></span><br><span class="line"><span class="regexp">      &#125;);</span></span><br><span class="line"><span class="regexp">    &#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    return (</span></span><br><span class="line"><span class="regexp">      &lt;Form className=&#123;styles.main&#125; layout="horizontal" onSubmit=&#123;handleSubmit&#125; hideRequiredMark&gt;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderAppName()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderCoinList()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderAuthDomain()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderRedirectUri()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderNotifyUrl()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderAppIcon()&#125;</span></span><br><span class="line"><span class="regexp">        &#123;that.renderSubmit()&#125;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>Form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 代码优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oh shit</title>
      <link href="/2019/01/14/oh-shit/"/>
      <url>/2019/01/14/oh-shit/</url>
      
        <content type="html"><![CDATA[<p>i thought it’s shit</p>]]></content>
      
      
      <categories>
          
          <category> 杂想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 牢骚 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2019/01/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2019/01/14/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>这玩意儿配合github搞起来还是有点点操蛋的花了些时间总算是搞出来了</p>]]></content>
      
      
      <categories>
          
          <category> 杂想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 冒泡 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
